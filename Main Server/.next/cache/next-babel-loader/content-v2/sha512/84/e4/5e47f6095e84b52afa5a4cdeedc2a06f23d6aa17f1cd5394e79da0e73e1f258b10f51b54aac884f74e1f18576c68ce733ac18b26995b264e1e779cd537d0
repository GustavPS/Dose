{"ast":null,"code":"var _jsxFileName = \"/mnt/h/Code/Dose/Main Server/components/search.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Style from './search.module.css';\nimport Form from 'react-bootstrap/Form';\nimport fetch from 'node-fetch';\nimport validateServerAccess from '../lib/validateServerAccess';\nimport didYouMean from 'didyoumean';\ndidYouMean.threshold = 0.1;\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.server = props.server;\n    this.serverToken = props.serverToken;\n    this.series = [];\n    this.movies = [];\n    this.enabled = props.searchEnabled;\n    this.search = this.search.bind(this);\n    this.onClose = props.onClose;\n    this.onSearch = props.onSearch;\n    this.dataDownloaded = false;\n  }\n  /**\n   * This is used to get all the movies/series from the server\n   */\n\n\n  getAllContent() {\n    validateServerAccess(this.server, serverToken => {\n      fetch(`${this.server.server_ip}/api/list?token=${serverToken}`).then(r => r.json()).then(content => {\n        this.series = content.series;\n        this.movies = content.movies;\n      });\n    });\n  }\n\n  search(event) {\n    if (!this.dataDownloaded && this.enabled) {\n      this.getAllContent();\n      this.dataDownloaded = true;\n    }\n\n    let query = event.target.value;\n\n    if (query === \"\") {\n      this.onClose(); //this.onSearch([]);\n\n      return;\n    }\n\n    let found = [];\n\n    for (let movie of this.movies) {\n      if (movie.title.toLowerCase().includes(query.toLowerCase())) {\n        movie.type = 'movie';\n        found.push(movie);\n      }\n    }\n\n    for (let serie of this.series) {\n      if (serie.title.toLowerCase().includes(query.toLowerCase())) {\n        serie.type = 'serie';\n        found.push(serie);\n      }\n    }\n\n    console.log(found);\n    this.onSearch(found);\n  }\n\n  render() {\n    return __jsx(Form, {\n      autoComplete: \"off\",\n      className: Style.searchForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Control, {\n      onInput: this.search,\n      type: \"text\",\n      placeholder: \"S\\xF6k..\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/mnt/h/Code/Dose/Main Server/components/search.js"],"names":["Style","Form","fetch","validateServerAccess","didYouMean","threshold","Search","React","Component","constructor","props","server","serverToken","series","movies","enabled","searchEnabled","search","bind","onClose","onSearch","dataDownloaded","getAllContent","server_ip","then","r","json","content","event","query","target","value","found","movie","title","toLowerCase","includes","type","push","serie","console","log","render","searchForm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,oBAAP,MAAiC,6BAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACAA,UAAU,CAACC,SAAX,GAAuB,GAAvB;AAGA,eAAe,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcD,KAAK,CAACC,MAApB;AACA,SAAKC,WAAL,GAAmBF,KAAK,CAACE,WAAzB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAeL,KAAK,CAACM,aAArB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,OAAL,GAAeT,KAAK,CAACS,OAArB;AACA,SAAKC,QAAL,GAAgBV,KAAK,CAACU,QAAtB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACH;AAED;AACJ;AACA;;;AACIC,EAAAA,aAAa,GAAG;AACZnB,IAAAA,oBAAoB,CAAC,KAAKQ,MAAN,EAAeC,WAAD,IAAiB;AAC/CV,MAAAA,KAAK,CAAE,GAAE,KAAKS,MAAL,CAAYY,SAAU,mBAAkBX,WAAY,EAAxD,CAAL,CACCY,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,OAAO,IAAI;AACb,aAAKd,MAAL,GAAcc,OAAO,CAACd,MAAtB;AACA,aAAKC,MAAL,GAAca,OAAO,CAACb,MAAtB;AACH,OALD;AAMH,KAPmB,CAApB;AAQH;;AAEDG,EAAAA,MAAM,CAACW,KAAD,EAAQ;AACV,QAAI,CAAC,KAAKP,cAAN,IAAwB,KAAKN,OAAjC,EAA0C;AACtC,WAAKO,aAAL;AACA,WAAKD,cAAL,GAAsB,IAAtB;AACH;;AACD,QAAIQ,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAzB;;AACA,QAAIF,KAAK,KAAK,EAAd,EAAkB;AACd,WAAKV,OAAL,GADc,CAEd;;AACA;AACH;;AACD,QAAIa,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,KAAT,IAAkB,KAAKnB,MAAvB,EAA+B;AAC3B,UAAImB,KAAK,CAACC,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCP,KAAK,CAACM,WAAN,EAAnC,CAAJ,EAA6D;AACzDF,QAAAA,KAAK,CAACI,IAAN,GAAa,OAAb;AACAL,QAAAA,KAAK,CAACM,IAAN,CAAWL,KAAX;AACH;AACJ;;AACD,SAAK,IAAIM,KAAT,IAAkB,KAAK1B,MAAvB,EAA+B;AAC3B,UAAI0B,KAAK,CAACL,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCP,KAAK,CAACM,WAAN,EAAnC,CAAJ,EAA6D;AACzDI,QAAAA,KAAK,CAACF,IAAN,GAAa,OAAb;AACAL,QAAAA,KAAK,CAACM,IAAN,CAAWC,KAAX;AACH;AACJ;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,SAAKZ,QAAL,CAAcY,KAAd;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,SAAS,EAAE1C,KAAK,CAAC2C,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,OAAN;AAAc,MAAA,OAAO,EAAE,KAAK1B,MAA5B;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,WAAW,EAAC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA9D+C","sourcesContent":["import Style from './search.module.css';\nimport Form from 'react-bootstrap/Form';\nimport fetch from 'node-fetch'\nimport validateServerAccess from '../lib/validateServerAccess';\nimport didYouMean from 'didyoumean';\ndidYouMean.threshold = 0.1;\n\n\nexport default class Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.server = props.server;\n        this.serverToken = props.serverToken;\n        this.series = [];\n        this.movies = [];\n        this.enabled = props.searchEnabled;\n        this.search = this.search.bind(this);\n        this.onClose = props.onClose;\n        this.onSearch = props.onSearch;\n        this.dataDownloaded = false;\n    }\n\n    /**\n     * This is used to get all the movies/series from the server\n     */\n    getAllContent() {\n        validateServerAccess(this.server, (serverToken) => {\n            fetch(`${this.server.server_ip}/api/list?token=${serverToken}`)\n            .then(r => r.json())\n            .then(content => {\n                this.series = content.series;\n                this.movies = content.movies;\n            });\n        });\n    }\n\n    search(event) {\n        if (!this.dataDownloaded && this.enabled) {\n            this.getAllContent();\n            this.dataDownloaded = true;\n        }\n        let query = event.target.value;\n        if (query === \"\") {\n            this.onClose();\n            //this.onSearch([]);\n            return;\n        }\n        let found = [];\n        for (let movie of this.movies) {\n            if (movie.title.toLowerCase().includes(query.toLowerCase())) {\n                movie.type = 'movie'\n                found.push(movie);\n            }\n        }\n        for (let serie of this.series) {\n            if (serie.title.toLowerCase().includes(query.toLowerCase())) {\n                serie.type = 'serie';\n                found.push(serie);\n            }\n        }\n        console.log(found);\n       this.onSearch(found);\n    }\n\n    render() {\n        return (\n            <Form autoComplete=\"off\" className={Style.searchForm}>\n                <Form.Control onInput={this.search} type=\"text\" placeholder=\"SÃ¶k..\" />\n            </Form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}