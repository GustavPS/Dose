# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DB_HOST: localhost
  DB_USERNAME: postgres
  DB_PASSWORD: postgres


jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: nikolaik/python-nodejs:python3.7-nodejs16-alpine

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2
        
      - name: Make temp directory
        run: |
          mkdir temp

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: |
          cd "Content Server"
          npm ci
          
      - name: Install cypress
        run: |
          sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
        
      - name: Create config file
        id: create-config
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "config.json"
          json: '{"database":{"host":"postgres","port":"5432","user":"postgres","password":"postgres","name":"TestServer"},"setup":{"done":true,"database":true,"admin":true},"mainServer":"http:\/\/localhost:3000"}'
          dir: 'temp/'

      - name: Build and run tests
        run: |
          cd "Content Server"
          npm run ci
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          TEMP_DIRECTORY: ../temp/
