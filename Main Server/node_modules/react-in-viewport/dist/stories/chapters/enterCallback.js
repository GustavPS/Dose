"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonActions = require("@storybook/addon-actions");

var _omit = _interopRequireDefault(require("lodash/omit"));

var _index = _interopRequireWildcard(require("../../index"));

var _themeComponent = require("../common/themeComponent");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ViewportBlock = (0, _index["default"])(_themeComponent.Block, {}, {
  disconnectOnLeave: false
});

var CustomAnchor = function CustomAnchor(_ref) {
  var forwardedRef = _ref.forwardedRef,
      inViewport = _ref.inViewport,
      restProps = _objectWithoutPropertiesLoose(_ref, ["forwardedRef", "inViewport"]);

  var text = inViewport ? 'Link (in viewport)' : 'Link (not in viewport)';
  return _react["default"].createElement("a", _extends({
    href: "https://github.com/roderickhsiao/react-in-viewport#readme"
  }, (0, _omit["default"])(restProps, _index.customProps), {
    ref: forwardedRef,
    style: {
      padding: '20px 0'
    }
  }), text);
};

var ViewportAnchor = (0, _index["default"])(CustomAnchor, {}, {
  disconnectOnLeave: false
});
(0, _react2.storiesOf)('Enter and Leave callback', module).addWithChapters('Class based component', {
  subtitle: 'Using handleViewport HOC',
  chapters: [{
    sections: [{
      title: 'onEnterViewport and onLeaveViewport callback',
      sectionFn: function sectionFn() {
        return _react["default"].createElement(ViewportBlock, {
          className: "card",
          onEnterViewport: function onEnterViewport() {
            return (0, _addonActions.action)('callback')('onEnterViewport');
          },
          onLeaveViewport: function onLeaveViewport() {
            return (0, _addonActions.action)('callback')('onLeaveViewport');
          }
        });
      }
    }]
  }]
}).addWithChapters('Functional component', {
  subtitle: 'Using handleViewport HOC',
  chapters: [{
    sections: [{
      title: 'onEnterViewport and onLeaveViewport callback',
      sectionFn: function sectionFn() {
        return _react["default"].createElement(ViewportAnchor, {
          onEnterViewport: function onEnterViewport() {
            return (0, _addonActions.action)('callback')('onEnterViewport');
          },
          onLeaveViewport: function onLeaveViewport() {
            return (0, _addonActions.action)('callback')('onLeaveViewport');
          }
        });
      }
    }]
  }]
});