{"ast":null,"code":"var _jsxFileName = \"/mnt/h/Code/Dose/Main Server/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../components/layout';\nimport LoginStyle from '../styles/login.module.css';\nimport { Form, Button } from 'react-bootstrap';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.login = this.login.bind(this);\n  }\n\n  login(e) {\n    e.preventDefault();\n    let serverUrl = process.env.NEXT_PUBLIC_SERVER_URL;\n    fetch(`${serverUrl}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    }).then(r => r.json()).then(data => {\n      if (data && data.status === 'error') {\n        let statusElement = document.getElementById(\"statusMessage\");\n        statusElement.innerHTML = data.message; // Show login error\n      } else if (data && data.status === 'success') {\n        cookie.set('token', data.token, {\n          expires: 7\n        });\n        cookie.set('refreshToken', data.refreshToken, {\n          expires: 7\n        });\n        cookie.set('validTo', data.validTo, {\n          expires: 7\n        });\n        Router.push('/');\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      home: true,\n      relative: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Login\")), __jsx(\"div\", {\n      className: LoginStyle.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: LoginStyle.loginForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      id: \"statusMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Login\"), __jsx(Link, {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: LoginStyle.registerLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 38\n      }\n    }, \"Don't have an account? Register now!\")), __jsx(\"div\", {\n      style: {\n        clear: 'both'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), __jsx(Form, {\n      onSubmit: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Group, {\n      controlId: \"formBasicUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Username\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter username\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Password\"), __jsx(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })), __jsx(Button, {\n      variant: \"primary\",\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Login\"), __jsx(\"input\", {\n      type: \"submit\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/mnt/h/Code/Dose/Main Server/pages/login.js"],"names":["Head","Link","Layout","LoginStyle","Form","Button","cookie","Router","Login","React","Component","constructor","props","state","username","password","login","bind","e","preventDefault","serverUrl","process","env","NEXT_PUBLIC_SERVER_URL","fetch","method","headers","body","JSON","stringify","then","r","json","data","status","statusElement","document","getElementById","innerHTML","message","set","token","expires","refreshToken","validTo","push","render","container","loginForm","registerLink","clear","setState","target","value","display"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport Link from 'next/link';\r\nimport Layout from '../components/layout'\r\nimport LoginStyle from '../styles/login.module.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport cookie from 'js-cookie';\r\nimport Router from 'next/router';\r\n\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    this.login = this.login.bind(this);\r\n}\r\n\r\nlogin(e) {\r\n  e.preventDefault();\r\n    let serverUrl = process.env.NEXT_PUBLIC_SERVER_URL;\r\n    fetch(`${serverUrl}/api/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        }),\r\n    })\r\n    .then((r) => r.json())\r\n    .then((data) => {\r\n      if (data && data.status === 'error') {\r\n        let statusElement = document.getElementById(\"statusMessage\");\r\n        statusElement.innerHTML = data.message;\r\n        // Show login error\r\n      } else if (data && data.status === 'success') {\r\n        cookie.set('token', data.token, {expires: 7});\r\n        cookie.set('refreshToken', data.refreshToken, {expires: 7});\r\n        cookie.set('validTo', data.validTo, {expires: 7});\r\n        Router.push('/');\r\n      }\r\n    });\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <Layout home relative>\r\n        <Head>\r\n          <title>Login</title>\r\n        </Head>\r\n\r\n        <div className={LoginStyle.container}>\r\n        <div className={LoginStyle.loginForm}>\r\n            <h3 id=\"statusMessage\"></h3>\r\n            <h1>Login</h1>\r\n            <Link href={\"/register\"}><a className={LoginStyle.registerLink}>Don't have an account? Register now!</a></Link>\r\n            <div style={{clear: 'both'}}></div>\r\n            <Form onSubmit={this.login}>\r\n          <Form.Group controlId=\"formBasicUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(e) => this.setState({username: e.target.value})}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => this.setState({password: e.target.value})}/>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" onClick={this.login}>\r\n              Login\r\n          </Button>\r\n          <input type=\"submit\" style={{display: 'none'}} />\r\n      </Form>\r\n        </div>\r\n        </div>\r\n\r\n      </Layout>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}