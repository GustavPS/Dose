{"version":3,"sources":["../../../next-server/server/image-optimizer.ts"],"names":["WEBP","PNG","JPEG","GIF","SVG","CACHE_VERSION","MODERN_TYPES","ANIMATABLE_TYPES","VECTOR_TYPES","imageOptimizer","server","req","res","parsedUrl","nextConfig","distDir","imageData","images","imageConfigDefault","deviceSizes","imageSizes","domains","loader","render404","finished","headers","url","w","q","query","mimeType","getSupportedMimeType","accept","href","statusCode","end","Array","isArray","isAbsolute","startsWith","hrefParsed","URL","toString","_error","includes","protocol","hostname","width","parseInt","isNaN","sizes","quality","hash","getHash","imagesDir","hashDir","now","Date","files","promises","readdir","file","prefix","etag","extension","split","expireAt","Number","contentType","fsPath","setHeader","pipe","unlink","upstreamBuffer","upstreamType","maxAge","upstreamRes","fetch","ok","status","Buffer","from","arrayBuffer","get","getMaxAge","_req","method","resBuffers","mockRes","Stream","Writable","write","chunk","push","isBuffer","_write","mockHeaders","writeHead","_status","_headers","Object","assign","getHeader","name","toLowerCase","getHeaders","getHeaderNames","keys","value","_implicitHeader","getRequestHandler","nodeUrl","parse","concat","err","vector","animate","writeToCacheDir","sendResponse","bitmap","orientation","Orientation","RIGHT_TOP","BOTTOM_RIGHT","LEFT_BOTTOM","optimizedBuffer","Error","error","dir","buffer","mkdir","recursive","filename","writeFile","options","items","item","update","String","digest","replace","parseCacheControl","str","map","Map","directive","key","trim","set","minimum","age","endsWith","slice","n","Math","max"],"mappings":"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","sourcesContent":["import { mediaType } from '@hapi/accept'\nimport { createHash } from 'crypto'\nimport { createReadStream, promises } from 'fs'\nimport { getOrientation, Orientation } from 'get-orientation'\nimport { IncomingMessage, ServerResponse } from 'http'\n// @ts-ignore no types for is-animated\nimport isAnimated from 'next/dist/compiled/is-animated'\nimport { join } from 'path'\nimport Stream from 'stream'\nimport nodeUrl, { UrlWithParsedQuery } from 'url'\nimport { fileExists } from '../../lib/file-exists'\nimport { ImageConfig, imageConfigDefault } from './image-config'\nimport ImageData from './lib/squoosh/image_data'\nimport {\n  decodeBuffer,\n  encodeJpeg,\n  encodePng,\n  encodeWebp,\n  resize,\n  rotate,\n} from './lib/squoosh/main'\nimport Server from './next-server'\nimport { sendEtagResponse } from './send-payload'\nimport { getContentType, getExtension } from './serve-static'\n\n//const AVIF = 'image/avif'\nconst WEBP = 'image/webp'\nconst PNG = 'image/png'\nconst JPEG = 'image/jpeg'\nconst GIF = 'image/gif'\nconst SVG = 'image/svg+xml'\nconst CACHE_VERSION = 2\nconst MODERN_TYPES = [/* AVIF, */ WEBP]\nconst ANIMATABLE_TYPES = [WEBP, PNG, GIF]\nconst VECTOR_TYPES = [SVG]\n\nexport async function imageOptimizer(\n  server: Server,\n  req: IncomingMessage,\n  res: ServerResponse,\n  parsedUrl: UrlWithParsedQuery\n) {\n  const { nextConfig, distDir } = server\n  const imageData: ImageConfig = nextConfig.images || imageConfigDefault\n  const { deviceSizes = [], imageSizes = [], domains = [], loader } = imageData\n\n  if (loader !== 'default') {\n    await server.render404(req, res, parsedUrl)\n    return { finished: true }\n  }\n\n  const { headers } = req\n  const { url, w, q } = parsedUrl.query\n  const mimeType = getSupportedMimeType(MODERN_TYPES, headers.accept)\n  let href: string\n\n  if (!url) {\n    res.statusCode = 400\n    res.end('\"url\" parameter is required')\n    return { finished: true }\n  } else if (Array.isArray(url)) {\n    res.statusCode = 400\n    res.end('\"url\" parameter cannot be an array')\n    return { finished: true }\n  }\n\n  let isAbsolute: boolean\n\n  if (url.startsWith('/')) {\n    href = url\n    isAbsolute = false\n  } else {\n    let hrefParsed: URL\n\n    try {\n      hrefParsed = new URL(url)\n      href = hrefParsed.toString()\n      isAbsolute = true\n    } catch (_error) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is invalid')\n      return { finished: true }\n    }\n\n    if (!['http:', 'https:'].includes(hrefParsed.protocol)) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is invalid')\n      return { finished: true }\n    }\n\n    if (!domains.includes(hrefParsed.hostname)) {\n      res.statusCode = 400\n      res.end('\"url\" parameter is not allowed')\n      return { finished: true }\n    }\n  }\n\n  if (!w) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) is required')\n    return { finished: true }\n  } else if (Array.isArray(w)) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) cannot be an array')\n    return { finished: true }\n  }\n\n  if (!q) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) is required')\n    return { finished: true }\n  } else if (Array.isArray(q)) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) cannot be an array')\n    return { finished: true }\n  }\n\n  const width = parseInt(w, 10)\n\n  if (!width || isNaN(width)) {\n    res.statusCode = 400\n    res.end('\"w\" parameter (width) must be a number greater than 0')\n    return { finished: true }\n  }\n\n  const sizes = [...deviceSizes, ...imageSizes]\n\n  if (!sizes.includes(width)) {\n    res.statusCode = 400\n    res.end(`\"w\" parameter (width) of ${width} is not allowed`)\n    return { finished: true }\n  }\n\n  const quality = parseInt(q)\n\n  if (isNaN(quality) || quality < 1 || quality > 100) {\n    res.statusCode = 400\n    res.end('\"q\" parameter (quality) must be a number between 1 and 100')\n    return { finished: true }\n  }\n\n  const hash = getHash([CACHE_VERSION, href, width, quality, mimeType])\n  const imagesDir = join(distDir, 'cache', 'images')\n  const hashDir = join(imagesDir, hash)\n  const now = Date.now()\n\n  if (await fileExists(hashDir, 'directory')) {\n    const files = await promises.readdir(hashDir)\n    for (let file of files) {\n      const [prefix, etag, extension] = file.split('.')\n      const expireAt = Number(prefix)\n      const contentType = getContentType(extension)\n      const fsPath = join(hashDir, file)\n      if (now < expireAt) {\n        res.setHeader('Cache-Control', 'public, max-age=0, must-revalidate')\n        if (sendEtagResponse(req, res, etag)) {\n          return { finished: true }\n        }\n        if (contentType) {\n          res.setHeader('Content-Type', contentType)\n        }\n        createReadStream(fsPath).pipe(res)\n        return { finished: true }\n      } else {\n        await promises.unlink(fsPath)\n      }\n    }\n  }\n\n  let upstreamBuffer: Buffer\n  let upstreamType: string | null\n  let maxAge: number\n\n  if (isAbsolute) {\n    const upstreamRes = await fetch(href)\n\n    if (!upstreamRes.ok) {\n      res.statusCode = upstreamRes.status\n      res.end('\"url\" parameter is valid but upstream response is invalid')\n      return { finished: true }\n    }\n\n    res.statusCode = upstreamRes.status\n    upstreamBuffer = Buffer.from(await upstreamRes.arrayBuffer())\n    upstreamType = upstreamRes.headers.get('Content-Type')\n    maxAge = getMaxAge(upstreamRes.headers.get('Cache-Control'))\n  } else {\n    try {\n      const _req: any = {\n        headers: req.headers,\n        method: req.method,\n        url: href,\n      }\n      const resBuffers: Buffer[] = []\n      const mockRes: any = new Stream.Writable()\n\n      mockRes.write = (chunk: Buffer | string) => {\n        resBuffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n      }\n      mockRes._write = (chunk: Buffer | string) => {\n        mockRes.write(chunk)\n      }\n\n      const mockHeaders: Record<string, string | string[]> = {}\n\n      mockRes.writeHead = (_status: any, _headers: any) =>\n        Object.assign(mockHeaders, _headers)\n      mockRes.getHeader = (name: string) => mockHeaders[name.toLowerCase()]\n      mockRes.getHeaders = () => mockHeaders\n      mockRes.getHeaderNames = () => Object.keys(mockHeaders)\n      mockRes.setHeader = (name: string, value: string | string[]) =>\n        (mockHeaders[name.toLowerCase()] = value)\n      mockRes._implicitHeader = () => {}\n      mockRes.finished = false\n      mockRes.statusCode = 200\n\n      await server.getRequestHandler()(_req, mockRes, nodeUrl.parse(href, true))\n      res.statusCode = mockRes.statusCode\n\n      upstreamBuffer = Buffer.concat(resBuffers)\n      upstreamType = mockRes.getHeader('Content-Type')\n      maxAge = getMaxAge(mockRes.getHeader('Cache-Control'))\n    } catch (err) {\n      res.statusCode = 500\n      res.end('\"url\" parameter is valid but upstream response is invalid')\n      return { finished: true }\n    }\n  }\n\n  const expireAt = maxAge * 1000 + now\n\n  if (upstreamType) {\n    const vector = VECTOR_TYPES.includes(upstreamType)\n    const animate =\n      ANIMATABLE_TYPES.includes(upstreamType) && isAnimated(upstreamBuffer)\n    if (vector || animate) {\n      await writeToCacheDir(hashDir, upstreamType, expireAt, upstreamBuffer)\n      sendResponse(req, res, upstreamType, upstreamBuffer)\n      return { finished: true }\n    }\n  }\n\n  let contentType: string\n\n  if (mimeType) {\n    contentType = mimeType\n  } else if (upstreamType?.startsWith('image/') && getExtension(upstreamType)) {\n    contentType = upstreamType\n  } else {\n    contentType = JPEG\n  }\n\n  try {\n    let bitmap: ImageData = await decodeBuffer(upstreamBuffer)\n    const orientation = await getOrientation(upstreamBuffer)\n    if (orientation === Orientation.RIGHT_TOP) {\n      bitmap = await rotate(bitmap, 1)\n    } else if (orientation === Orientation.BOTTOM_RIGHT) {\n      bitmap = await rotate(bitmap, 2)\n    } else if (orientation === Orientation.LEFT_BOTTOM) {\n      bitmap = await rotate(bitmap, 3)\n    } else {\n      // TODO: support more orientations\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      // const _: never = orientation\n    }\n\n    if (bitmap.width && bitmap.width > width) {\n      bitmap = await resize(bitmap, { width })\n    }\n\n    let optimizedBuffer: Buffer | undefined\n    //if (contentType === AVIF) {\n    //} else\n    if (contentType === WEBP) {\n      optimizedBuffer = await encodeWebp(bitmap, { quality })\n    } else if (contentType === PNG) {\n      optimizedBuffer = await encodePng(bitmap)\n    } else if (contentType === JPEG) {\n      optimizedBuffer = await encodeJpeg(bitmap, { quality })\n    }\n\n    if (optimizedBuffer) {\n      await writeToCacheDir(hashDir, contentType, expireAt, optimizedBuffer)\n      sendResponse(req, res, contentType, optimizedBuffer)\n    } else {\n      throw new Error('Unable to optimize buffer')\n    }\n  } catch (error) {\n    sendResponse(req, res, upstreamType, upstreamBuffer)\n  }\n\n  return { finished: true }\n}\n\nasync function writeToCacheDir(\n  dir: string,\n  contentType: string,\n  expireAt: number,\n  buffer: Buffer\n) {\n  await promises.mkdir(dir, { recursive: true })\n  const extension = getExtension(contentType)\n  const etag = getHash([buffer])\n  const filename = join(dir, `${expireAt}.${etag}.${extension}`)\n  await promises.writeFile(filename, buffer)\n}\n\nfunction sendResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  contentType: string | null,\n  buffer: Buffer\n) {\n  const etag = getHash([buffer])\n  res.setHeader('Cache-Control', 'public, max-age=0, must-revalidate')\n  if (sendEtagResponse(req, res, etag)) {\n    return\n  }\n  if (contentType) {\n    res.setHeader('Content-Type', contentType)\n  }\n  res.end(buffer)\n}\n\nfunction getSupportedMimeType(options: string[], accept = ''): string {\n  const mimeType = mediaType(accept, options)\n  return accept.includes(mimeType) ? mimeType : ''\n}\n\nfunction getHash(items: (string | number | Buffer)[]) {\n  const hash = createHash('sha256')\n  for (let item of items) {\n    if (typeof item === 'number') hash.update(String(item))\n    else {\n      hash.update(item)\n    }\n  }\n  // See https://en.wikipedia.org/wiki/Base64#Filenames\n  return hash.digest('base64').replace(/\\//g, '-')\n}\n\nfunction parseCacheControl(str: string | null): Map<string, string> {\n  const map = new Map<string, string>()\n  if (!str) {\n    return map\n  }\n  for (let directive of str.split(',')) {\n    let [key, value] = directive.trim().split('=')\n    key = key.toLowerCase()\n    if (value) {\n      value = value.toLowerCase()\n    }\n    map.set(key, value)\n  }\n  return map\n}\n\nexport function getMaxAge(str: string | null): number {\n  const minimum = 60\n  const map = parseCacheControl(str)\n  if (map) {\n    let age = map.get('s-maxage') || map.get('max-age') || ''\n    if (age.startsWith('\"') && age.endsWith('\"')) {\n      age = age.slice(1, -1)\n    }\n    const n = parseInt(age, 10)\n    if (!isNaN(n)) {\n      return Math.max(n, minimum)\n    }\n  }\n  return minimum\n}\n"]}