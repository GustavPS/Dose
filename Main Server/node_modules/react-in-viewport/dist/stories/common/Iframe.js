"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactAspectRatio = _interopRequireDefault(require("react-aspect-ratio"));

var _index = require("../../index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Iframe =
/*#__PURE__*/
function (_PureComponent) {
  _inheritsLoose(Iframe, _PureComponent);

  function Iframe(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;
    _this.state = {
      loaded: false
    };
    return _this;
  }

  Iframe.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.inViewport && !state.loaded) {
      return {
        loaded: true
      };
    }

    return null;
  };

  var _proto = Iframe.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        src = _this$props.src,
        ratio = _this$props.ratio,
        forwardedRef = _this$props.forwardedRef;
    var Component = this.state.loaded ? 'iframe' : 'div';
    var props = this.state.loaded ? {
      src: src,
      frameBorder: 0
    } : {};
    return _react["default"].createElement(_reactAspectRatio["default"], {
      ratio: ratio,
      style: {
        marginBottom: '200px',
        backgroundColor: 'rgba(0,0,0,.12)'
      }
    }, _react["default"].createElement(Component, props));
  };

  return Iframe;
}(_react.PureComponent);

var LazyIframe = (0, _index.handleViewport)(Iframe, {}, {
  disconnectOnLeave: true
});
var _default = LazyIframe;
exports["default"] = _default;