{"ast":null,"code":"import { getLocationOrigin } from 'next/dist/next-server/lib/utils';\n\nconst db = require('../../../lib/db').default;\n\nconst hash = require('./hash');\n\nexport default async function handle(req, res) {\n  let email = req.body.email;\n  let username = req.body.username;\n  let password = req.body.password;\n\n  try {\n    // Check if user exist;\n    const user = await db.any('SELECT * FROM users WHERE email=$1 OR username = $2', [email, username]);\n\n    if (user.length !== 0) {\n      res.status(200).json({\n        status: 'error',\n        message: 'Email or username exist'\n      });\n      return;\n    }\n\n    let salt = hash.getSalt(20);\n    let hashed = hash.getHash(password, salt);\n    await db.none('INSERT INTO users (email, username, password, salt) VALUES($1, $2, $3, $4)', [email, username, hashed, salt]);\n    res.status(200).json({\n      status: 'success',\n      message: 'success'\n    });\n  } catch (e) {\n    console.error(e);\n    res.status(200).json({\n      status: 'error',\n      message: 'Database error'\n    });\n  }\n}\n;","map":{"version":3,"sources":["/mnt/h/Code/Dose/Main Server/pages/api/auth/register.js"],"names":["getLocationOrigin","db","require","default","hash","handle","req","res","email","body","username","password","user","any","length","status","json","message","salt","getSalt","hashed","getHash","none","e","console","error"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iCAAlC;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BC,OAAtC;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;AAEA,eAAe,eAAeG,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC3C,MAAIC,KAAK,GAAGF,GAAG,CAACG,IAAJ,CAASD,KAArB;AACA,MAAIE,QAAQ,GAAGJ,GAAG,CAACG,IAAJ,CAASC,QAAxB;AACA,MAAIC,QAAQ,GAAGL,GAAG,CAACG,IAAJ,CAASE,QAAxB;;AAEA,MAAI;AACA;AACA,UAAMC,IAAI,GAAG,MAAMX,EAAE,CAACY,GAAH,CAAO,qDAAP,EAA8D,CAACL,KAAD,EAAQE,QAAR,CAA9D,CAAnB;;AACA,QAAIE,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACnBP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,QAAAA,MAAM,EAAE,OADS;AAEjBE,QAAAA,OAAO,EAAE;AAFQ,OAArB;AAIA;AACH;;AACD,QAAIC,IAAI,GAAGd,IAAI,CAACe,OAAL,CAAa,EAAb,CAAX;AACA,QAAIC,MAAM,GAAGhB,IAAI,CAACiB,OAAL,CAAaV,QAAb,EAAuBO,IAAvB,CAAb;AAEA,UAAMjB,EAAE,CAACqB,IAAH,CAAQ,4EAAR,EAAsF,CAACd,KAAD,EAAQE,QAAR,EAAkBU,MAAlB,EAA0BF,IAA1B,CAAtF,CAAN;AAEAX,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,MAAAA,MAAM,EAAE,SADS;AAEjBE,MAAAA,OAAO,EAAE;AAFQ,KAArB;AAIH,GAnBD,CAmBE,OAAOM,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAhB,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,MAAAA,MAAM,EAAE,OADS;AAEjBE,MAAAA,OAAO,EAAE;AAFQ,KAArB;AAIH;AACJ;AAAA","sourcesContent":["import { getLocationOrigin } from 'next/dist/next-server/lib/utils';\r\n\r\nconst db = require('../../../lib/db').default;\r\nconst hash = require('./hash');\r\n\r\nexport default async function handle(req, res) {\r\n    let email = req.body.email;\r\n    let username = req.body.username;\r\n    let password = req.body.password;\r\n\r\n    try {\r\n        // Check if user exist;\r\n        const user = await db.any('SELECT * FROM users WHERE email=$1 OR username = $2', [email, username]);\r\n        if (user.length !== 0) {\r\n            res.status(200).json({\r\n                status: 'error',\r\n                message: 'Email or username exist'\r\n            });\r\n            return;\r\n        }\r\n        let salt = hash.getSalt(20);\r\n        let hashed = hash.getHash(password, salt);\r\n\r\n        await db.none('INSERT INTO users (email, username, password, salt) VALUES($1, $2, $3, $4)', [email, username, hashed, salt]);\r\n        \r\n        res.status(200).json({\r\n            status: 'success',\r\n            message: 'success'\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(200).json({\r\n            status: 'error',\r\n            message: 'Database error'\r\n        });\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}