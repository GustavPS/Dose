{"ast":null,"code":"var _jsxFileName = \"/mnt/h/Code/Dose/Main Server/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Layout from '../components/layout';\nimport style from '../styles/index.module.css';\nimport useSWR from 'swr';\nimport ServerBox from '../components/serverBox';\nimport Router from 'next/router';\nimport cookie from 'js-cookie'; // Fetcher for useSWR, redirect to login if not authorized\n\nconst fetcher = url => fetch(url).then(r => {\n  return r.json().then(result => {\n    console.log(result);\n    console.log(result[\"servers\"].length);\n\n    if (result[\"servers\"].length != 1) {\n      return result;\n    } else {\n      let server = result[\"servers\"][0];\n      cookie.set('server', JSON.stringify({\n        id: server.server_id,\n        name: server.server_name,\n        ip: server.server_ip\n      }));\n      Router.push(`/server/${server.server_id}`);\n    }\n  });\n});\n\nconst chooseServer = server => {\n  cookie.set('server', JSON.stringify({\n    id: server.server_id,\n    name: server.server_name,\n    ip: server.server_ip\n  }));\n  Router.push(`/server/${server.server_id}`);\n};\n\nexport default function Home() {\n  const {\n    data,\n    error\n  } = useSWR(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/servers/getServers?token=${cookie.get('token')}`, fetcher);\n  return __jsx(Layout, {\n    home: true,\n    relative: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), data && data.servers && __jsx(\"div\", {\n    className: style.servers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, data.servers.map((server, i) => __jsx(ServerBox, {\n    onClick: () => chooseServer(server),\n    name: server.server_name,\n    adress: server.server_ip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 42\n    }\n  }))), !data && __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Loading\"), error && __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"fel\"));\n}","map":{"version":3,"sources":["/mnt/h/Code/Dose/Main Server/pages/index.js"],"names":["Head","Layout","style","useSWR","ServerBox","Router","cookie","fetcher","url","fetch","then","r","json","result","console","log","length","server","set","JSON","stringify","id","server_id","name","server_name","ip","server_ip","push","chooseServer","Home","data","error","process","env","NEXT_PUBLIC_SERVER_URL","get","servers","map","i"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport Layout from '../components/layout'\nimport style from '../styles/index.module.css';\nimport useSWR from 'swr';\nimport ServerBox from '../components/serverBox';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\n\n// Fetcher for useSWR, redirect to login if not authorized\nconst fetcher = url =>\n  fetch(url)\n    .then(r => {\n      return r.json().then(result => {\n        console.log(result)\n        console.log(result[\"servers\"].length)\n        if(result[\"servers\"].length != 1) {\n          return result;\n        } else {\n          let server = result[\"servers\"][0]\n          cookie.set('server', JSON.stringify({\n            id: server.server_id,\n            name: server.server_name,\n            ip: server.server_ip\n          }));\n          Router.push(`/server/${server.server_id}`);\n        }\n      });\n    }\n  );\nconst chooseServer = server => {\n  cookie.set('server', JSON.stringify({\n    id: server.server_id,\n    name: server.server_name,\n    ip: server.server_ip\n  }));\n  Router.push(`/server/${server.server_id}`);\n}\n\nexport default function Home() {\n  const { data, error } = useSWR(`${process.env.NEXT_PUBLIC_SERVER_URL}/api/servers/getServers?token=${cookie.get('token')}`, fetcher);\n\n  return (\n    <Layout home relative>\n      <Head>\n      </Head>\n      {data && data.servers &&\n      <div className={style.servers}>\n        {data.servers.map((server, i) => <ServerBox onClick={() => chooseServer(server)} name={server.server_name} adress={server.server_ip}></ServerBox>)}\n      </div>\n      }\n\n\n      {!data &&\n      <h1>Loading</h1>\n      }\n\n      {error &&\n      <h1>fel</h1>\n      }\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}