{"ast":null,"code":"var _jsxFileName = \"/mnt/h/Code/Dose/Main Server/pages/server/[server]/movies/video/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Layout from '../../../../../components/layout';\nimport { useEffect, useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { Form, Button, ListGroup, Image } from 'react-bootstrap';\nimport ReactPlayer from 'react-player';\nimport Styles from '../../../../../styles/video.module.css';\nimport fetch from 'node-fetch';\nimport vtt from 'vtt-live-edit';\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nimport VideoComponent from '../../../../../components/videoComponent';\nimport VideoTrailer from '.././../../../../components/videoTrailer';\nimport validateServerAccess from '../../../../../lib/validateServerAccess';\nimport Actor from '../../../../../components/actor';\nimport useWindowSize from '../../../../../components/hooks/WindowSize';\nimport MovieBackdrop from '../../../../../components/movieBackdrop';\nimport ChangeImages from '../../../../../components/changeImages'; // Fetcher for useSWR, redirect to login if not authorized\n\nlet fetchedMetadata = false;\nexport default function Home(props) {\n  const server = props.server;\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const serverToken = props.serverToken;\n  const {\n    0: metadata,\n    1: setMetadata\n  } = useState({});\n  const {\n    0: watched,\n    1: setWatched\n  } = useState(false);\n  const {\n    0: inWatchList,\n    1: setInWatchList\n  } = useState(false);\n  const {\n    0: actors,\n    1: setActors\n  } = useState([]);\n  const {\n    0: recommended,\n    1: setRecommended\n  } = useState([]);\n  const {\n    0: viewTrailer,\n    1: setViewTrailer\n  } = useState(false);\n  const {\n    0: trailer,\n    1: setTrailer\n  } = useState(false);\n  const {\n    0: loaded,\n    1: setLoaded\n  } = useState(false);\n  const {\n    0: recommendedLoaded,\n    1: setRecommendedLoaded\n  } = useState(false);\n  const videoRef = useRef();\n  const windowSize = useWindowSize(); // Used for manual metadata search\n\n  const {\n    0: metadataBox,\n    1: setMetadataBox\n  } = useState(false);\n  const {\n    0: metadataSearchResult,\n    1: setMetadataSearchResult\n  } = useState([]);\n  const metadataSearch = useRef(null); // This has it's own useEffect because if it doesn't videojs doesn't work (????)\n\n  useEffect(() => {\n    validateServerAccess(server, serverToken => {\n      fetch(`${server.server_ip}/api/movies/${id}/getRecommended?token=${serverToken}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(r => r.json()).then(result => {\n        if (result.success) {\n          console.log(result);\n          result.movies.forEach(movie => {\n            for (let image of movie.images) {\n              if (image.active) {\n                if (image.type === 'BACKDROP') {\n                  if (image.path === 'no_image') {\n                    movie.backdrop = null;\n                  } else {\n                    movie.backdrop = image.path;\n                  }\n                } else {\n                  if (image.path === 'no_image') {\n                    movie.backdrop = null;\n                  } else {\n                    movie.poster = image.path;\n                  }\n                }\n\n                if (movie.backdrop != null && movie.poster != null) {\n                  break;\n                }\n              }\n            }\n          });\n          setRecommended(result.movies);\n        }\n      }).then(() => {\n        setRecommendedLoaded(true);\n      });\n      fetch(`${server.server_ip}/api/movies/${id}?token=${serverToken}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(r => r.json()).then(result => {\n        let meta = result.result;\n        console.log(meta);\n        let finish_at = new Date(new Date().getTime() + meta.runtime * 60000);\n        meta.finish_at = finish_at.getHours() + \":\" + finish_at.getMinutes();\n\n        for (let image of meta.images) {\n          if (image.active && image.type === 'BACKDROP') {\n            meta.backdrop = image.path;\n          }\n\n          if (image.active && image.type === 'POSTER') {\n            meta.poster = image.path;\n          }\n        }\n\n        let new_added_date = new Date(parseInt(meta.added_date));\n        let added_year = new_added_date.getFullYear();\n        let added_month = new_added_date.getMonth() + 1;\n\n        if (added_month < 10) {\n          added_month = \"0\" + added_month.toString();\n        }\n\n        let adde_date = new_added_date.getDate();\n\n        if (adde_date < 10) {\n          adde_date = \"0\" + adde_date.toString();\n        }\n\n        meta.added_date = `${added_year}-${added_month}-${adde_date}`;\n        let currentTime = \"\";\n        let hours = Math.floor(meta.currentTime / 60 / 60);\n        let minutes = Math.floor(meta.currentTime / 60 % 60);\n        let seconds = Math.floor(meta.currentTime % 60);\n\n        if (hours >= 1) {\n          currentTime += `${hours}:`;\n        }\n\n        if (minutes < 10) {\n          minutes = `0${minutes}`;\n        }\n\n        if (seconds < 10) {\n          seconds = `0${seconds}`;\n        }\n\n        currentTime += `${minutes}:${seconds}`;\n        meta.currentTimeSeconds = meta.currentTime;\n        meta.currentTime = currentTime;\n        console.log(videoRef);\n        videoRef.current.setTitle(meta.title);\n        setInWatchList(meta.inwatchlist);\n        setWatched(meta.watched);\n        setMetadata(meta);\n        setTrailer(meta.trailer);\n        meta.actors = meta.actors.sort((a, b) => {\n          return parseFloat(a.order) - parseFloat(b.order);\n        });\n        setActors(meta.actors);\n\n        if (router.query.autoPlay) {\n          videoRef.current.show();\n        }\n      }).then(() => {\n        setLoaded(true);\n      });\n    });\n  }, []);\n\n  const markAsWatched = () => {\n    validateServerAccess(server, serverToken => {\n      fetch(`${server.server_ip}/api/movies/${id}/setWatched?watched=true&token=${serverToken}`).then(r => r.json()).then(status => {\n        if (status.success) {\n          setWatched(true);\n        } else {\n          console.log(\"ERROR MARKING AS WATCHED: \" + status);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const markAsNotWatched = () => {\n    validateServerAccess(server, serverToken => {\n      fetch(`${server.server_ip}/api/movies/${id}/setWatched?watched=false&token=${serverToken}`).then(r => r.json()).then(status => {\n        if (status.success) {\n          setWatched(false);\n        } else {\n          console.log(\"ERROR MARKING AS WATCHED: \" + status);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const addToWatchList = () => {\n    validateServerAccess(server, serverToken => {\n      fetch(`${server.server_ip}/api/movies/${id}/addToWatchList?add=true&token=${serverToken}`).then(r => r.json()).then(status => {\n        if (status.success) {\n          setInWatchList(true);\n        } else {\n          console.log(\"ERROR adding to watchlist: \" + status);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const removeFromWatchList = () => {\n    validateServerAccess(server, serverToken => {\n      fetch(`${server.server_ip}/api/movies/${id}/addToWatchList?add=false&token=${serverToken}`).then(r => r.json()).then(status => {\n        if (status.success) {\n          setInWatchList(false);\n        } else {\n          console.log(\"ERROR removing from watchlist: \" + status);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const searchMetadata = event => {\n    let search = metadataSearch.current.value;\n\n    if (search != \"\") {\n      validateServerAccess(server, serverToken => {\n        fetch(`${server.server_ip}/api/movies/searchMetadata?search=${search}&token=${serverToken}`).then(r => r.json()).then(result => {\n          console.log(result);\n          let metadataElements = [];\n\n          for (let movie of result) {\n            let img = movie.poster_path !== null ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750';\n            metadataElements.push(__jsx(ListGroup.Item, {\n              key: movie.id,\n              className: Styles.metadataSearchRow,\n              \"data-metadataid\": movie.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 15\n              }\n            }, __jsx(Image, {\n              src: img,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }\n            }), __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }\n            }, __jsx(\"h5\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }\n            }, movie.title), __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }\n            }, movie.overview)), __jsx(Button, {\n              onClick: () => updateMetadata(movie.id),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }\n            }, \"V\\xE4lj\")));\n          }\n\n          setMetadataSearchResult(metadataElements);\n        });\n      });\n    }\n\n    event.preventDefault();\n  };\n\n  const updateMetadata = metadataID => {\n    validateServerAccess(server, serverToken => {\n      fetch(`${server.server_ip}/api/movies/${id}/updateMetadata?metadataID=${metadataID}&token=${serverToken}`).then(r => r.json()).then(json => {\n        if (json.success) {\n          Router.reload(window.location.pathname);\n        }\n      });\n    });\n  };\n\n  const getActors = () => {\n    let elements = [];\n\n    for (const actor of actors) {\n      elements.push(__jsx(Actor, {\n        name: actor.name,\n        characterName: actor.character,\n        image: actor.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return elements;\n  };\n\n  const getRecommended = () => {\n    let elements = [];\n\n    for (const movie of recommended) {\n      let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000';\n      elements.push(__jsx(MovieBackdrop, {\n        markAsDoneButton: true,\n        id: movie.id,\n        time: 0,\n        runtime: 0,\n        title: movie.title,\n        overview: movie.overview,\n        backdrop: img,\n        onClick: id => selectMovie(movie.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return elements;\n  };\n\n  const selectMovie = id => {\n    Router.push(`/server/${server.server_id}/movies/video/${id}`);\n    Router.events.on(\"routeChangeComplete\", () => {\n      Router.reload(window.location.pathname);\n    });\n  };\n\n  const scrollLeft = id => {\n    document.getElementById(id).scrollLeft -= window.innerWidth * 0.8;\n    window.scrollTo(window.scrollX, window.scrollY - 1);\n    window.scrollTo(window.scrollX, window.scrollY + 1);\n  };\n\n  const scrollRight = id => {\n    document.getElementById(id).scrollLeft += window.innerWidth * 0.8;\n    window.scrollTo(window.scrollX, window.scrollY - 1);\n    window.scrollTo(window.scrollX, window.scrollY + 1);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(VideoComponent, {\n    ref: videoRef,\n    server: server,\n    serverToken: serverToken,\n    internalID: id,\n    Movie: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 5\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }\n  }, __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }\n  }), __jsx(\"script\", {\n    src: \"https://vjs.zencdn.net/7.7.6/video.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 5\n    }\n  }), __jsx(\"script\", {\n    src: \"http://code.jquery.com/jquery-1.9.1.min.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 5\n    }\n  }), __jsx(\"link\", {\n    href: \"https://vjs.zencdn.net/7.7.6/video-js.css\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 5\n    }\n  }), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 5\n    }\n  })), (!loaded || !recommendedLoaded) && __jsx(\"div\", {\n    className: Styles.loadingioSpinnerEclipse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: Styles.ldio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }))), loaded && recommendedLoaded && __jsx(React.Fragment, null, trailer !== false && viewTrailer && __jsx(VideoTrailer, {\n    onClose: () => setViewTrailer(false),\n    videoPath: trailer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundImage: `url('https://image.tmdb.org/t/p/original${metadata.backdrop}')`\n    },\n    className: Styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"backIcon\",\n    onClick: () => {\n      Router.back();\n      Router.events.on(\"routeChangeComplete\", () => {\n        Router.reload(window.location.pathname);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 5\n    }\n  }), metadataBox && __jsx(\"div\", {\n    className: \"metadataBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onSubmit: searchMetadata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"formSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, \"Uppdatera metadata f\\xF6r \", metadata.path), __jsx(Form.Control, {\n    ref: metadataSearch,\n    type: \"text\",\n    placeholder: \"S\\xF6k efter ny metadata...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  })), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, \"S\\xF6k\")), __jsx(\"div\", {\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }), __jsx(ListGroup, {\n    id: \"metadataSearchResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }, metadataSearchResult)), __jsx(\"div\", {\n    className: Styles.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: Styles.poster,\n    style: {\n      backgroundImage: `url('https://image.tmdb.org/t/p/original${metadata.poster}')`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: Styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }, metadata.title), __jsx(\"div\", {\n    className: Styles.metadata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: Styles.releaseDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, metadata.release_date), __jsx(\"p\", {\n    className: Styles.runtime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 11\n    }\n  }, Math.floor(metadata.runtime / 60) + \"h \" + metadata.runtime % 60 + \"m\"), __jsx(\"p\", {\n    className: Styles.endsat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  }, \"Slutar vid \", metadata.finish_at), __jsx(\"p\", {\n    className: Styles.addedDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, \"Tillagd \", metadata.added_date)), __jsx(\"div\", {\n    className: Styles.overview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, metadata.overview)), __jsx(\"div\", {\n    className: Styles.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, metadata.currentTimeSeconds > 0 && __jsx(\"div\", {\n    style: {\n      marginRight: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: Styles.playButton,\n    onClick: () => videoRef.current.show(metadata.currentTimeSeconds),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    style: {\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, \"\\xC5teruppta fr\\xE5n \", metadata.currentTime)), __jsx(\"div\", {\n    style: {\n      marginRight: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: Styles.playButton,\n    onClick: () => videoRef.current.show(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    style: {\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, \"Spela fr\\xE5n b\\xF6rjan\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: Styles.playButton,\n    onClick: () => setViewTrailer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    style: {\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  }, \"Visa trailer\")), watched && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    id: \"markAsWatched\",\n    style: {\n      backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/cross.svg')`\n    },\n    className: Styles.playButton,\n    onClick: () => markAsNotWatched(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    id: \"markAsWatchedText\",\n    style: {\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 15\n    }\n  }, \"Markera som osedd\"))), !watched && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    id: \"markAsWatched\",\n    style: {\n      backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/eye.svg')`\n    },\n    className: Styles.playButton,\n    onClick: () => markAsWatched(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    id: \"markAsWatchedText\",\n    style: {\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, \"Markera som sedd\"))), inWatchList && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    id: \"inWatchList\",\n    style: {\n      backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/cross.svg')`\n    },\n    className: Styles.playButton,\n    onClick: () => removeFromWatchList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    id: \"inWatchListText\",\n    style: {\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 15\n    }\n  }, \"Ta bort fr\\xE5n watchlist\"))), !inWatchList && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    id: \"inWatchList\",\n    style: {\n      backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/eye.svg')`\n    },\n    className: Styles.playButton,\n    onClick: () => addToWatchList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    id: \"inWatchListText\",\n    style: {\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 15\n    }\n  }, \"L\\xE4gg till i watchlist\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: \"15px\",\n      backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/search.svg')`\n    },\n    className: Styles.playButton,\n    onClick: () => setMetadataBox(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    style: {\n      marginLeft: \"15px\",\n      marginTop: \"5px\",\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, \"Uppdatera metadata\")), __jsx(ChangeImages, {\n    id: id,\n    server: server,\n    serverToken: serverToken,\n    type: \"movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 11\n    }\n  })))), __jsx(\"div\", {\n    className: Styles.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }\n  }, \"Actors\"), __jsx(\"div\", {\n    className: Styles.actors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    id: \"actors\",\n    className: Styles.actorBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }\n  }, getActors()), actors.length * 200 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: () => scrollLeft('actors'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: `${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`,\n    width: \"70\",\n    height: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: () => scrollRight('actors'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: `${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`,\n    width: \"70\",\n    height: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 41\n    }\n  })))), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 5\n    }\n  }, \"Recommended\"), recommended.length > 0 && __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"recommended\",\n    className: Styles.scrollable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 29\n    }\n  }, getRecommended()), recommended.length * 480 > windowSize.width && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: () => scrollLeft('recommended'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: `${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`,\n    width: \"70\",\n    height: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: () => scrollRight('recommended'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: `${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`,\n    width: \"70\",\n    height: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 21\n    }\n  }))))));\n} // Get the information about the server and send it to the front end before render (this is server-side)\n\nexport async function getServerSideProps(context) {\n  let serverId = context.params.server;\n  let movieID = context.params.id;\n  return await fetch(`http://localhost:${process.env.SERVER_PORT}${process.env.SERVER_SUB_FOLDER}/api/servers/getServer`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: serverId\n    })\n  }).then(r => r.json()).then(async data => {\n    return {\n      props: {\n        server: data.server,\n        serverToken: cookies(context).serverToken || ''\n      }\n    };\n  });\n}","map":{"version":3,"sources":["/mnt/h/Code/Dose/Main Server/pages/server/[server]/movies/video/[id].js"],"names":["Head","Layout","useEffect","useState","useRef","useRouter","Form","Button","ListGroup","Image","ReactPlayer","Styles","fetch","vtt","Router","cookies","VideoComponent","VideoTrailer","validateServerAccess","Actor","useWindowSize","MovieBackdrop","ChangeImages","fetchedMetadata","Home","props","server","router","id","query","serverToken","metadata","setMetadata","watched","setWatched","inWatchList","setInWatchList","actors","setActors","recommended","setRecommended","viewTrailer","setViewTrailer","trailer","setTrailer","loaded","setLoaded","recommendedLoaded","setRecommendedLoaded","videoRef","windowSize","metadataBox","setMetadataBox","metadataSearchResult","setMetadataSearchResult","metadataSearch","server_ip","method","headers","then","r","json","result","success","console","log","movies","forEach","movie","image","images","active","type","path","backdrop","poster","meta","finish_at","Date","getTime","runtime","getHours","getMinutes","new_added_date","parseInt","added_date","added_year","getFullYear","added_month","getMonth","toString","adde_date","getDate","currentTime","hours","Math","floor","minutes","seconds","currentTimeSeconds","current","setTitle","title","inwatchlist","sort","a","b","parseFloat","order","autoPlay","show","markAsWatched","status","catch","err","markAsNotWatched","addToWatchList","removeFromWatchList","searchMetadata","event","search","value","metadataElements","img","poster_path","push","metadataSearchRow","overview","updateMetadata","preventDefault","metadataID","reload","window","location","pathname","getActors","elements","actor","name","character","getRecommended","selectMovie","server_id","events","on","scrollLeft","document","getElementById","innerWidth","scrollTo","scrollX","scrollY","scrollRight","loadingioSpinnerEclipse","ldio","backgroundImage","background","back","clear","top","description","releaseDate","release_date","endsat","addedDate","actions","marginRight","playButton","marginTop","fontSize","marginLeft","process","env","NEXT_PUBLIC_SERVER_URL","bottom","actorBox","length","width","scrollButton","right","position","movieRow","scrollable","divider","getServerSideProps","context","serverId","params","movieID","SERVER_PORT","SERVER_SUB_FOLDER","body","JSON","stringify","data"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA8C,iBAA9C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,oBAAP,MAAiC,yCAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AAIA,OAAOC,YAAP,MAAyB,wCAAzB,C,CAEA;;AACA,IAAIC,eAAe,GAAG,KAAtB;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,MAAM,GAAGtB,SAAS,EAAxB;AACA,QAAM;AAAEuB,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAMC,WAAW,GAAGL,KAAK,CAACK,WAA1B;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAAC8B,OAAD;AAAA,OAAUC;AAAV,MAAwB/B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACgC,WAAD;AAAA,OAAcC;AAAd,MAAgCjC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACkC,MAAD;AAAA,OAASC;AAAT,MAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACoC,WAAD;AAAA,OAAcC;AAAd,MAAgCrC,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM;AAAA,OAACsC,WAAD;AAAA,OAAcC;AAAd,MAAgCvC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACwC,OAAD;AAAA,OAAUC;AAAV,MAAwBzC,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAA,OAAC0C,MAAD;AAAA,OAASC;AAAT,MAAsB3C,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAAC4C,iBAAD;AAAA,OAAoBC;AAApB,MAA4C7C,QAAQ,CAAC,KAAD,CAA1D;AAEA,QAAM8C,QAAQ,GAAG7C,MAAM,EAAvB;AACA,QAAM8C,UAAU,GAAG9B,aAAa,EAAhC,CAlBkC,CAsBlC;;AACA,QAAM;AAAA,OAAC+B,WAAD;AAAA,OAAcC;AAAd,MAAgCjD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACkD,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDnD,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAMoD,cAAc,GAAGnD,MAAM,CAAC,IAAD,CAA7B,CAzBkC,CA6BlC;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,oBAAoB,CAACQ,MAAD,EAAUI,WAAD,IAAiB;AAC5ClB,MAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,eAAc5B,EAAG,yBAAwBE,WAAY,EAA1E,EAA6E;AAChF2B,QAAAA,MAAM,EAAE,KADwE;AAEhFC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFuE,OAA7E,CAAL,CAMCC,IAND,CAMMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EANX,EAOCF,IAPD,CAOMG,MAAM,IAAI;AACd,YAAIA,MAAM,CAACC,OAAX,EAAoB;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAA,UAAAA,MAAM,CAACI,MAAP,CAAcC,OAAd,CAAsBC,KAAK,IAAI;AAC7B,iBAAK,IAAIC,KAAT,IAAkBD,KAAK,CAACE,MAAxB,EAAgC;AAC5B,kBAAID,KAAK,CAACE,MAAV,EAAkB;AACd,oBAAIF,KAAK,CAACG,IAAN,KAAe,UAAnB,EAA+B;AAC3B,sBAAIH,KAAK,CAACI,IAAN,KAAe,UAAnB,EAA+B;AAC3BL,oBAAAA,KAAK,CAACM,QAAN,GAAiB,IAAjB;AACH,mBAFD,MAEO;AACHN,oBAAAA,KAAK,CAACM,QAAN,GAAiBL,KAAK,CAACI,IAAvB;AACH;AACJ,iBAND,MAMO;AACH,sBAAIJ,KAAK,CAACI,IAAN,KAAe,UAAnB,EAA+B;AAC3BL,oBAAAA,KAAK,CAACM,QAAN,GAAiB,IAAjB;AACH,mBAFD,MAEO;AACHN,oBAAAA,KAAK,CAACO,MAAN,GAAeN,KAAK,CAACI,IAArB;AACH;AACJ;;AAED,oBAAIL,KAAK,CAACM,QAAN,IAAkB,IAAlB,IAA0BN,KAAK,CAACO,MAAN,IAAgB,IAA9C,EAAoD;AAChD;AACH;AACJ;AACJ;AACJ,WAtBC;AAuBAnC,UAAAA,cAAc,CAACsB,MAAM,CAACI,MAAR,CAAd;AACD;AACF,OAnCD,EAoCCP,IApCD,CAoCM,MAAM;AACVX,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,OAtCD;AA0CApC,MAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,eAAc5B,EAAG,UAASE,WAAY,EAA3D,EAA8D;AACjE2B,QAAAA,MAAM,EAAE,KADyD;AAEjEC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFwD,OAA9D,CAAL,CAMCC,IAND,CAMMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EANX,EAOCF,IAPD,CAOMG,MAAM,IAAI;AACd,YAAIc,IAAI,GAAGd,MAAM,CAACA,MAAlB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,YAAIC,SAAS,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuBH,IAAI,CAACI,OAAL,GAAe,KAA/C,CAAhB;AACAJ,QAAAA,IAAI,CAACC,SAAL,GAAiBA,SAAS,CAACI,QAAV,KAAuB,GAAvB,GAA6BJ,SAAS,CAACK,UAAV,EAA9C;;AACA,aAAK,IAAIb,KAAT,IAAkBO,IAAI,CAACN,MAAvB,EAA+B;AAC7B,cAAID,KAAK,CAACE,MAAN,IAAgBF,KAAK,CAACG,IAAN,KAAe,UAAnC,EAA+C;AAC7CI,YAAAA,IAAI,CAACF,QAAL,GAAgBL,KAAK,CAACI,IAAtB;AACD;;AACD,cAAIJ,KAAK,CAACE,MAAN,IAAgBF,KAAK,CAACG,IAAN,KAAe,QAAnC,EAA6C;AAC3CI,YAAAA,IAAI,CAACD,MAAL,GAAcN,KAAK,CAACI,IAApB;AACD;AACF;;AAED,YAAIU,cAAc,GAAG,IAAIL,IAAJ,CAASM,QAAQ,CAACR,IAAI,CAACS,UAAN,CAAjB,CAArB;AACA,YAAIC,UAAU,GAAGH,cAAc,CAACI,WAAf,EAAjB;AACA,YAAIC,WAAW,GAAGL,cAAc,CAACM,QAAf,KAA4B,CAA9C;;AACA,YAAGD,WAAW,GAAG,EAAjB,EAAqB;AACnBA,UAAAA,WAAW,GAAG,MAAMA,WAAW,CAACE,QAAZ,EAApB;AACD;;AACD,YAAIC,SAAS,GAAGR,cAAc,CAACS,OAAf,EAAhB;;AACA,YAAGD,SAAS,GAAG,EAAf,EAAmB;AACjBA,UAAAA,SAAS,GAAG,MAAMA,SAAS,CAACD,QAAV,EAAlB;AACD;;AACDd,QAAAA,IAAI,CAACS,UAAL,GAAmB,GAAEC,UAAW,IAAGE,WAAY,IAAGG,SAAU,EAA5D;AAEA,YAAIE,WAAW,GAAG,EAAlB;AACA,YAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWpB,IAAI,CAACiB,WAAL,GAAmB,EAAnB,GAAwB,EAAnC,CAAZ;AACA,YAAII,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYpB,IAAI,CAACiB,WAAL,GAAmB,EAApB,GAA0B,EAArC,CAAd;AACA,YAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWpB,IAAI,CAACiB,WAAL,GAAmB,EAA9B,CAAd;;AACA,YAAIC,KAAK,IAAI,CAAb,EAAgB;AACdD,UAAAA,WAAW,IAAK,GAAEC,KAAM,GAAxB;AACD;;AACD,YAAIG,OAAO,GAAG,EAAd,EAAkB;AAChBA,UAAAA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AACD;;AACD,YAAIC,OAAO,GAAG,EAAd,EAAkB;AAChBA,UAAAA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AACD;;AACDL,QAAAA,WAAW,IAAK,GAAEI,OAAQ,IAAGC,OAAQ,EAArC;AACAtB,QAAAA,IAAI,CAACuB,kBAAL,GAA0BvB,IAAI,CAACiB,WAA/B;AACAjB,QAAAA,IAAI,CAACiB,WAAL,GAAmBA,WAAnB;AACA7B,QAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACAA,QAAAA,QAAQ,CAACmD,OAAT,CAAiBC,QAAjB,CAA0BzB,IAAI,CAAC0B,KAA/B;AAEAlE,QAAAA,cAAc,CAACwC,IAAI,CAAC2B,WAAN,CAAd;AACArE,QAAAA,UAAU,CAAC0C,IAAI,CAAC3C,OAAN,CAAV;AACAD,QAAAA,WAAW,CAAC4C,IAAD,CAAX;AACAhC,QAAAA,UAAU,CAACgC,IAAI,CAACjC,OAAN,CAAV;AACAiC,QAAAA,IAAI,CAACvC,MAAL,GAAcuC,IAAI,CAACvC,MAAL,CAAYmE,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvC,iBAAOC,UAAU,CAACF,CAAC,CAACG,KAAH,CAAV,GAAsBD,UAAU,CAACD,CAAC,CAACE,KAAH,CAAvC;AACD,SAFa,CAAd;AAGAtE,QAAAA,SAAS,CAACsC,IAAI,CAACvC,MAAN,CAAT;;AAEA,YAAIV,MAAM,CAACE,KAAP,CAAagF,QAAjB,EAA2B;AACzB5D,UAAAA,QAAQ,CAACmD,OAAT,CAAiBU,IAAjB;AACD;AACF,OAhED,EAgEGnD,IAhEH,CAgEQ,MAAM;AACZb,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAlED;AAmED,KA9GmB,CAApB;AA+GD,GAhHQ,EAgHN,EAhHM,CAAT;;AAkHA,QAAMiE,aAAa,GAAG,MAAM;AAC1B7F,IAAAA,oBAAoB,CAACQ,MAAD,EAAUI,WAAD,IAAiB;AAC5ClB,MAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,eAAc5B,EAAG,kCAAiCE,WAAY,EAAnF,CAAL,CACC6B,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMqD,MAAM,IAAI;AACd,YAAIA,MAAM,CAACjD,OAAX,EAAoB;AAClB7B,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFD,MAEO;AACL8B,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+B+C,MAA3C;AACD;AACF,OARD,EAQGC,KARH,CAQSC,GAAG,IAAI;AACdlD,QAAAA,OAAO,CAACC,GAAR,CAAYiD,GAAZ;AACD,OAVD;AAWD,KAZmB,CAApB;AAcD,GAfD;;AAiBA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BjG,IAAAA,oBAAoB,CAACQ,MAAD,EAAUI,WAAD,IAAiB;AAC5ClB,MAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,eAAc5B,EAAG,mCAAkCE,WAAY,EAApF,CAAL,CACC6B,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMqD,MAAM,IAAI;AACd,YAAIA,MAAM,CAACjD,OAAX,EAAoB;AAClB7B,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAFD,MAEO;AACL8B,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+B+C,MAA3C;AACD;AACF,OARD,EASCC,KATD,CASOC,GAAG,IAAI;AACZlD,QAAAA,OAAO,CAACC,GAAR,CAAYiD,GAAZ;AACD,OAXD;AAYD,KAbmB,CAApB;AAcD,GAfD;;AAiBA,QAAME,cAAc,GAAG,MAAM;AAC3BlG,IAAAA,oBAAoB,CAACQ,MAAD,EAAUI,WAAD,IAAiB;AAC5ClB,MAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,eAAc5B,EAAG,kCAAiCE,WAAY,EAAnF,CAAL,CACC6B,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMqD,MAAM,IAAI;AACd,YAAIA,MAAM,CAACjD,OAAX,EAAoB;AAClB3B,UAAAA,cAAc,CAAC,IAAD,CAAd;AACD,SAFD,MAEO;AACL4B,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgC+C,MAA5C;AACD;AACF,OARD,EAQSC,KART,CAQeC,GAAG,IAAI;AACpBlD,QAAAA,OAAO,CAACC,GAAR,CAAYiD,GAAZ;AACD,OAVD;AAWD,KAZmB,CAApB;AAaD,GAdD;;AAgBA,QAAMG,mBAAmB,GAAG,MAAM;AAChCnG,IAAAA,oBAAoB,CAACQ,MAAD,EAAUI,WAAD,IAAiB;AAC5ClB,MAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,eAAc5B,EAAG,mCAAkCE,WAAY,EAApF,CAAL,CACC6B,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMqD,MAAM,IAAI;AACd,YAAIA,MAAM,CAACjD,OAAX,EAAoB;AAClB3B,UAAAA,cAAc,CAAC,KAAD,CAAd;AACD,SAFD,MAEO;AACL4B,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoC+C,MAAhD;AACD;AACF,OARD,EASCC,KATD,CASOC,GAAG,IAAI;AACZlD,QAAAA,OAAO,CAACC,GAAR,CAAYiD,GAAZ;AACD,OAXD;AAYD,KAbmB,CAApB;AAcD,GAfD;;AAiBA,QAAMI,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAIC,MAAM,GAAGjE,cAAc,CAAC6C,OAAf,CAAuBqB,KAApC;;AACA,QAAGD,MAAM,IAAI,EAAb,EAAgB;AACdtG,MAAAA,oBAAoB,CAACQ,MAAD,EAAUI,WAAD,IAAiB;AAC5ClB,QAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,qCAAoCgE,MAAO,UAAS1F,WAAY,EAArF,CAAL,CACC6B,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,MAAM,IAAI;AACdE,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,cAAI4D,gBAAgB,GAAG,EAAvB;;AACA,eAAK,IAAItD,KAAT,IAAkBN,MAAlB,EAA0B;AACxB,gBAAI6D,GAAG,GAAGvD,KAAK,CAACwD,WAAN,KAAsB,IAAtB,GAA8B,mCAAkCxD,KAAK,CAACwD,WAAY,EAAlF,GAAsF,qCAAhG;AACAF,YAAAA,gBAAgB,CAACG,IAAjB,CACE,MAAC,SAAD,CAAW,IAAX;AAAgB,cAAA,GAAG,EAAEzD,KAAK,CAACxC,EAA3B;AAA+B,cAAA,SAAS,EAAEjB,MAAM,CAACmH,iBAAjD;AAAoE,iCAAiB1D,KAAK,CAACxC,EAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,KAAD;AAAO,cAAA,GAAG,EAAE+F,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKvD,KAAK,CAACkC,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAIlC,KAAK,CAAC2D,QAAV,CAFF,CAFF,EAME,MAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAMC,cAAc,CAAC5D,KAAK,CAACxC,EAAP,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANF,CADF;AAUD;;AACD0B,UAAAA,uBAAuB,CAACoE,gBAAD,CAAvB;AACD,SAnBD;AAoBD,OArBmB,CAApB;AAsBD;;AAEDH,IAAAA,KAAK,CAACU,cAAN;AACD,GA5BD;;AA8BA,QAAMD,cAAc,GAAIE,UAAD,IAAgB;AACrChH,IAAAA,oBAAoB,CAACQ,MAAD,EAAUI,WAAD,IAAiB;AAC5ClB,MAAAA,KAAK,CAAE,GAAEc,MAAM,CAAC8B,SAAU,eAAc5B,EAAG,8BAA6BsG,UAAW,UAASpG,WAAY,EAAnG,CAAL,CACC6B,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACE,OAAT,EAAkB;AAChBjD,UAAAA,MAAM,CAACqH,MAAP,CAAcC,MAAM,CAACC,QAAP,CAAgBC,QAA9B;AACD;AACF,OAND;AAOD,KARmB,CAApB;AASD,GAVD;;AAaA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,MAAMC,KAAX,IAAoBpG,MAApB,EAA4B;AAC1BmG,MAAAA,QAAQ,CAACX,IAAT,CACE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAEY,KAAK,CAACC,IAAnB;AAAyB,QAAA,aAAa,EAAED,KAAK,CAACE,SAA9C;AAAyD,QAAA,KAAK,EAAEF,KAAK,CAACpE,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AACD,WAAOmE,QAAP;AACD,GARD;;AAUA,QAAMI,cAAc,GAAG,MAAM;AAC3B,QAAIJ,QAAQ,GAAG,EAAf;;AACA,SAAK,MAAMpE,KAAX,IAAoB7B,WAApB,EAAiC;AAC/B,UAAIoF,GAAG,GAAGvD,KAAK,CAACM,QAAN,KAAmB,IAAnB,GAA2B,mCAAkCN,KAAK,CAACM,QAAS,EAA5E,GAAgF,uCAA1F;AACA8D,MAAAA,QAAQ,CAACX,IAAT,CACI,MAAC,aAAD;AAAe,QAAA,gBAAgB,MAA/B;AAAgC,QAAA,EAAE,EAAEzD,KAAK,CAACxC,EAA1C;AAA8C,QAAA,IAAI,EAAE,CAApD;AAAuD,QAAA,OAAO,EAAE,CAAhE;AAAmE,QAAA,KAAK,EAAEwC,KAAK,CAACkC,KAAhF;AAAuF,QAAA,QAAQ,EAAElC,KAAK,CAAC2D,QAAvG;AAAiH,QAAA,QAAQ,EAAEJ,GAA3H;AAAgI,QAAA,OAAO,EAAG/F,EAAD,IAAQiH,WAAW,CAACzE,KAAK,CAACxC,EAAP,CAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGD;;AACD,WAAO4G,QAAP;AACD,GATD;;AAWA,QAAMK,WAAW,GAAIjH,EAAD,IAAQ;AAC1Bd,IAAAA,MAAM,CAAC+G,IAAP,CAAa,WAAUnG,MAAM,CAACoH,SAAU,iBAAgBlH,EAAG,EAA3D;AACAd,IAAAA,MAAM,CAACiI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAM;AAC5ClI,MAAAA,MAAM,CAACqH,MAAP,CAAcC,MAAM,CAACC,QAAP,CAAgBC,QAA9B;AAGD,KAJD;AAKD,GAPD;;AASA,QAAMW,UAAU,GAAIrH,EAAD,IAAQ;AACzBsH,IAAAA,QAAQ,CAACC,cAAT,CAAwBvH,EAAxB,EAA4BqH,UAA5B,IAA2Cb,MAAM,CAACgB,UAAR,GAAoB,GAA9D;AACAhB,IAAAA,MAAM,CAACiB,QAAP,CAAgBjB,MAAM,CAACkB,OAAvB,EAAgClB,MAAM,CAACmB,OAAP,GAAiB,CAAjD;AACAnB,IAAAA,MAAM,CAACiB,QAAP,CAAgBjB,MAAM,CAACkB,OAAvB,EAAgClB,MAAM,CAACmB,OAAP,GAAiB,CAAjD;AACD,GAJD;;AAKA,QAAMC,WAAW,GAAI5H,EAAD,IAAQ;AACxBsH,IAAAA,QAAQ,CAACC,cAAT,CAAwBvH,EAAxB,EAA4BqH,UAA5B,IAA2Cb,MAAM,CAACgB,UAAR,GAAoB,GAA9D;AACAhB,IAAAA,MAAM,CAACiB,QAAP,CAAgBjB,MAAM,CAACkB,OAAvB,EAAgClB,MAAM,CAACmB,OAAP,GAAiB,CAAjD;AACAnB,IAAAA,MAAM,CAACiB,QAAP,CAAgBjB,MAAM,CAACkB,OAAvB,EAAgClB,MAAM,CAACmB,OAAP,GAAiB,CAAjD;AACH,GAJD;;AAMA,SACE,4BACA,MAAC,cAAD;AAAgB,IAAA,GAAG,EAAEtG,QAArB;AAA+B,IAAA,MAAM,EAAEvB,MAAvC;AAA+C,IAAA,WAAW,EAAEI,WAA5D;AACgB,IAAA,UAAU,EAAEF,EAD5B;AACgC,IAAA,KAAK,MADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,IAAI,EAAC,uEAAX;AAAmF,IAAA,GAAG,EAAC,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAQ,IAAA,GAAG,EAAC,uCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAIA;AAAQ,IAAA,GAAG,EAAC,4CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAM,IAAA,IAAI,EAAC,2CAAX;AAAuD,IAAA,GAAG,EAAC,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAMA;AAAQ,IAAA,IAAI,EAAC,iBAAb;AAA+B,IAAA,GAAG,EAAC,4EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CALA,EAcC,CAAC,CAACiB,MAAD,IAAW,CAACE,iBAAb,KACC;AAAK,IAAA,SAAS,EAAEpC,MAAM,CAAC8I,uBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE9I,MAAM,CAAC+I,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAfF,EAqBC7G,MAAM,IAAIE,iBAAV,IACD,4BAKCJ,OAAO,KAAK,KAAZ,IAAqBF,WAArB,IACD,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,KAAD,CAA3C;AAAoD,IAAA,SAAS,EAAEC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,EAUA;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,KAAK,EAAE;AAACgH,MAAAA,eAAe,EAAG,2CAA0C5H,QAAQ,CAAC2C,QAAS;AAA/E,KAAZ;AAAiG,IAAA,SAAS,EAAE/D,MAAM,CAACiJ,UAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAE,MAAM;AACvC9I,MAAAA,MAAM,CAAC+I,IAAP;AACA/I,MAAAA,MAAM,CAACiI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAM;AAC5ClI,QAAAA,MAAM,CAACqH,MAAP,CAAcC,MAAM,CAACC,QAAP,CAAgBC,QAA9B;AACD,OAFD;AAGC,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAUCnF,WAAW,IACV;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEmE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAoCvF,QAAQ,CAAC0C,IAA7C,CADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,GAAG,EAAElB,cAAnB;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,WAAW,EAAC,6BAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,EAUE;AAAK,IAAA,KAAK,EAAE;AAACuG,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAYE,MAAC,SAAD;AAAW,IAAA,EAAE,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzG,oBADH,CAZF,CAXF,EA8BA;AAAK,IAAA,SAAS,EAAE1C,MAAM,CAACoJ,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEpJ,MAAM,CAACgE,MAAvB;AAA+B,IAAA,KAAK,EAAE;AAACgF,MAAAA,eAAe,EAAG,2CAA0C5H,QAAQ,CAAC4C,MAAO;AAA7E,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEhE,MAAM,CAACqJ,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjI,QAAQ,CAACuE,KAAd,CADF,EAEE;AAAK,IAAA,SAAS,EAAE3F,MAAM,CAACoB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEpB,MAAM,CAACsJ,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmClI,QAAQ,CAACmI,YAA5C,CADF,EAEE;AAAG,IAAA,SAAS,EAAEvJ,MAAM,CAACqE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Be,IAAI,CAACC,KAAL,CAAWjE,QAAQ,CAACiD,OAAT,GAAmB,EAA9B,IAAoC,IAApC,GAA2CjD,QAAQ,CAACiD,OAAT,GAAiB,EAA5D,GAA+D,GAA9F,CAFF,EAGE;AAAG,IAAA,SAAS,EAAErE,MAAM,CAACwJ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyCpI,QAAQ,CAAC8C,SAAlD,CAHF,EAIE;AAAG,IAAA,SAAS,EAAElE,MAAM,CAACyJ,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyCrI,QAAQ,CAACsD,UAAlD,CAJF,CAFF,EAQE;AAAK,IAAA,SAAS,EAAE1E,MAAM,CAACoH,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhG,QAAQ,CAACgG,QAAb,CADJ,CARF,EAWE;AAAK,IAAA,SAAS,EAAEpH,MAAM,CAAC0J,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtI,QAAQ,CAACoE,kBAAT,GAA8B,CAA9B,IACD;AAAK,IAAA,KAAK,EAAE;AAACmE,MAAAA,WAAW,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE3J,MAAM,CAAC4J,UAAvB;AAAmC,IAAA,OAAO,EAAE,MAAMtH,QAAQ,CAACmD,OAAT,CAAiBU,IAAjB,CAAsB/E,QAAQ,CAACoE,kBAA/B,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,KAAK,EAAE;AAACqE,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAgE1I,QAAQ,CAAC8D,WAAzE,CAFF,CAFF,EAOE;AAAK,IAAA,KAAK,EAAE;AAACyE,MAAAA,WAAW,EAAE;AAAd,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE3J,MAAM,CAAC4J,UAAvB;AAAmC,IAAA,OAAO,EAAE,MAAMtH,QAAQ,CAACmD,OAAT,CAAiBU,IAAjB,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,KAAK,EAAE;AAAC0D,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE9J,MAAM,CAAC4J,UAAvB;AAAmC,IAAA,OAAO,EAAE,MAAM7H,cAAc,CAAC,IAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,KAAK,EAAE;AAAC8H,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CAXF,EAeGxI,OAAO,IACR,4BACI;AAAK,IAAA,KAAK,EAAE;AAACyI,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,EAAE,EAAC,eAAR;AAAwB,IAAA,KAAK,EAAE;AAACf,MAAAA,eAAe,EAAG,QAAOgB,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AAA7D,KAA/B;AAAmH,IAAA,SAAS,EAAElK,MAAM,CAAC4J,UAArI;AAAiJ,IAAA,OAAO,EAAE,MAAMpD,gBAAgB,EAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAG,IAAA,EAAE,EAAC,mBAAN;AAA0B,IAAA,KAAK,EAAE;AAACqD,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFA,CADJ,CAhBF,EAuBG,CAACxI,OAAD,IACD,4BACE;AAAK,IAAA,KAAK,EAAE;AAACyI,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAwB,IAAA,KAAK,EAAE;AAACf,MAAAA,eAAe,EAAG,QAAOgB,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AAA7D,KAA/B;AAAiH,IAAA,SAAS,EAAElK,MAAM,CAAC4J,UAAnI;AAA+I,IAAA,OAAO,EAAE,MAAMxD,aAAa,EAA3K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,EAAE,EAAC,mBAAN;AAA0B,IAAA,KAAK,EAAE;AAACyD,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,CAxBF,EA+BGtI,WAAW,IACZ,4BACI;AAAK,IAAA,KAAK,EAAE;AAACuI,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,EAAE,EAAC,aAAR;AAAsB,IAAA,KAAK,EAAE;AAACf,MAAAA,eAAe,EAAG,QAAOgB,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AAA7D,KAA7B;AAAiH,IAAA,SAAS,EAAElK,MAAM,CAAC4J,UAAnI;AAA+I,IAAA,OAAO,EAAE,MAAMlD,mBAAmB,EAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAG,IAAA,EAAE,EAAC,iBAAN;AAAwB,IAAA,KAAK,EAAE;AAACmD,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CADJ,CAhCF,EAuCG,CAACtI,WAAD,IACD,4BACE;AAAK,IAAA,KAAK,EAAE;AAACuI,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAsB,IAAA,KAAK,EAAE;AAACf,MAAAA,eAAe,EAAG,QAAOgB,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AAA7D,KAA7B;AAA+G,IAAA,SAAS,EAAElK,MAAM,CAAC4J,UAAjI;AAA6I,IAAA,OAAO,EAAE,MAAMnD,cAAc,EAA1K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,EAAE,EAAC,iBAAN;AAAwB,IAAA,KAAK,EAAE;AAACoD,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CADF,CAxCF,EA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE,MAAb;AAAqBf,MAAAA,eAAe,EAAG,QAAOgB,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AAAjF,KAAZ;AAAqH,IAAA,SAAS,EAAElK,MAAM,CAAC4J,UAAvI;AAAmJ,IAAA,OAAO,EAAE,MAAMnH,cAAc,CAAC,IAAD,CAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,KAAK,EAAE;AAACsH,MAAAA,UAAU,EAAE,MAAb;AAAqBF,MAAAA,SAAS,EAAE,KAAhC;AAAuCC,MAAAA,QAAQ,EAAE;AAAjD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CA/CF,EAoDE,MAAC,YAAD;AAAc,IAAA,EAAE,EAAE7I,EAAlB;AAAsB,IAAA,MAAM,EAAEF,MAA9B;AAAsC,IAAA,WAAW,EAAEI,WAAnD;AAAgE,IAAA,IAAI,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApDF,CAXF,CAFF,CA9BA,EAoGA;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAACmK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,IAAA,SAAS,EAAEnK,MAAM,CAAC0B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,SAAS,EAAE1B,MAAM,CAACoK,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxC,SAAS,EADZ,CADF,EAIGlG,MAAM,CAAC2I,MAAP,GAAgB,GAAhB,GAAsB9H,UAAU,CAAC+H,KAAjC,IACuB,4BACI;AAAK,IAAA,SAAS,EAAEtK,MAAM,CAACuK,YAAvB;AAAqC,IAAA,OAAO,EAAE,MAAMjC,UAAU,CAAC,QAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAG,GAAE0B,OAAO,CAACC,GAAR,CAAYC,sBAAuB,kBAAhD;AAAmE,IAAA,KAAK,EAAC,IAAzE;AAA8E,IAAA,MAAM,EAAC,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAElK,MAAM,CAACuK,YAAvB;AAAqC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAA5C;AAA0D,IAAA,OAAO,EAAE,MAAM3B,WAAW,CAAC,QAAD,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAG,GAAEmB,OAAO,CAACC,GAAR,CAAYC,sBAAuB,mBAAhD;AAAoE,IAAA,KAAK,EAAC,IAA1E;AAA+E,IAAA,MAAM,EAAC,IAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAL1B,CAFF,EAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBA,EAmBCtI,WAAW,CAACyI,MAAZ,GAAqB,CAArB,IACe;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEzK,MAAM,CAAC0K,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAsB,IAAA,SAAS,EAAE1K,MAAM,CAAC2K,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1C,cAAc,EADnB,CADJ,EAIKrG,WAAW,CAACyI,MAAZ,GAAqB,GAArB,GAA2B9H,UAAU,CAAC+H,KAAtC,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEtK,MAAM,CAACuK,YAAvB;AAAqC,IAAA,OAAO,EAAE,MAAMjC,UAAU,CAAC,aAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAG,GAAE0B,OAAO,CAACC,GAAR,CAAYC,sBAAuB,kBAAhD;AAAmE,IAAA,KAAK,EAAC,IAAzE;AAA8E,IAAA,MAAM,EAAC,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAElK,MAAM,CAACuK,YAAvB;AAAqC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAA5C;AAA0D,IAAA,OAAO,EAAE,MAAM3B,WAAW,CAAC,aAAD,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAG,GAAEmB,OAAO,CAACC,GAAR,CAAYC,sBAAuB,mBAAhD;AAAoE,IAAA,KAAK,EAAC,IAA1E;AAA+E,IAAA,MAAM,EAAC,IAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CALR,CADJ,EAgBA;AAAI,IAAA,SAAS,EAAElK,MAAM,CAAC4K,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBA,CApBhB,CApGA,CAVA,CAtBA,CADF;AAkLD,C,CAED;;AACA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,MAAIC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAejK,MAA9B;AACA,MAAIkK,OAAO,GAAGH,OAAO,CAACE,MAAR,CAAe/J,EAA7B;AAEA,SAAO,MAAMhB,KAAK,CAAE,oBAAmB+J,OAAO,CAACC,GAAR,CAAYiB,WAAY,GAAElB,OAAO,CAACC,GAAR,CAAYkB,iBAAkB,wBAA7E,EAAsG;AACpHrI,IAAAA,MAAM,EAAE,MAD4G;AAEpHC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAF2G;AAKpHqI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBrK,MAAAA,EAAE,EAAE8J;AADa,KAAf;AAL8G,GAAtG,CAAL,CASZ/H,IATY,CASNC,CAAD,IAAOA,CAAC,CAACC,IAAF,EATA,EAUZF,IAVY,CAUP,MAAOuI,IAAP,IAAe;AACnB,WAAO;AACLzK,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAEwK,IAAI,CAACxK,MADV;AAEHI,QAAAA,WAAW,EAAEf,OAAO,CAAC0K,OAAD,CAAP,CAAiB3J,WAAjB,IAAgC;AAF1C;AADF,KAAP;AAOD,GAlBY,CAAb;AAmBD","sourcesContent":["import Head from 'next/head'\nimport Layout from '../../../../../components/layout';\nimport { useEffect, useState, useRef } from 'react';\nimport { useRouter } from 'next/router'\nimport { Form, Button, ListGroup, Image} from 'react-bootstrap';\nimport ReactPlayer from 'react-player'\nimport Styles from '../../../../../styles/video.module.css';\nimport fetch from 'node-fetch'\nimport vtt from 'vtt-live-edit';\nimport Router from 'next/router';\nimport cookies from 'next-cookies'\n\nimport VideoComponent from '../../../../../components/videoComponent';\nimport VideoTrailer from '.././../../../../components/videoTrailer';\nimport validateServerAccess from '../../../../../lib/validateServerAccess';\nimport Actor from '../../../../../components/actor';\nimport useWindowSize from '../../../../../components/hooks/WindowSize';\nimport MovieBackdrop from '../../../../../components/movieBackdrop';\n\n\n\nimport ChangeImages from '../../../../../components/changeImages';\n\n// Fetcher for useSWR, redirect to login if not authorized\nlet fetchedMetadata = false;\n\n\nexport default function Home(props) {\n  const server = props.server;\n  const router = useRouter();\n  const { id } = router.query;\n  const serverToken = props.serverToken;\n  const [metadata, setMetadata] = useState({});\n  const [watched, setWatched] = useState(false);\n  const [inWatchList, setInWatchList] = useState(false);\n  const [actors, setActors] = useState([]);\n  const [recommended, setRecommended] = useState([]);\n\n  const [viewTrailer, setViewTrailer] = useState(false);\n  const [trailer, setTrailer] = useState(false);\n\n  const [loaded, setLoaded] = useState(false)\n  const [recommendedLoaded, setRecommendedLoaded] = useState(false);\n\n  const videoRef = useRef();\n  const windowSize = useWindowSize();\n\n\n\n  // Used for manual metadata search\n  const [metadataBox, setMetadataBox] = useState(false);\n  const [metadataSearchResult, setMetadataSearchResult] = useState([]);\n  const metadataSearch = useRef(null);\n\n\n\n  // This has it's own useEffect because if it doesn't videojs doesn't work (????)\n  useEffect(() => {\n    validateServerAccess(server, (serverToken) => {\n      fetch(`${server.server_ip}/api/movies/${id}/getRecommended?token=${serverToken}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n      })\n      .then(r => r.json())\n      .then(result => {\n        if (result.success) {\n          console.log(result);\n          result.movies.forEach(movie => {\n            for (let image of movie.images) {\n                if (image.active) {\n                    if (image.type === 'BACKDROP') {\n                        if (image.path === 'no_image') {\n                            movie.backdrop = null;\n                        } else {\n                            movie.backdrop = image.path;\n                        }\n                    } else {\n                        if (image.path === 'no_image') {\n                            movie.backdrop = null;\n                        } else {\n                            movie.poster = image.path;\n                        }\n                    }\n\n                    if (movie.backdrop != null && movie.poster != null) {\n                        break;\n                    }\n                }\n            }\n        });\n          setRecommended(result.movies);\n        }\n      })\n      .then(() => {\n        setRecommendedLoaded(true);\n      });\n\n\n\n      fetch(`${server.server_ip}/api/movies/${id}?token=${serverToken}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n      })\n      .then(r => r.json())\n      .then(result => {\n        let meta = result.result;\n        console.log(meta)\n        let finish_at = new Date(new Date().getTime() + meta.runtime * 60000);\n        meta.finish_at = finish_at.getHours() + \":\" + finish_at.getMinutes();\n        for (let image of meta.images) {\n          if (image.active && image.type === 'BACKDROP') {\n            meta.backdrop = image.path;\n          }\n          if (image.active && image.type === 'POSTER') {\n            meta.poster = image.path;\n          }\n        }\n        \n        let new_added_date = new Date(parseInt(meta.added_date));\n        let added_year = new_added_date.getFullYear();\n        let added_month = new_added_date.getMonth() + 1;\n        if(added_month < 10) {\n          added_month = \"0\" + added_month.toString();\n        }\n        let adde_date = new_added_date.getDate();\n        if(adde_date < 10) {\n          adde_date = \"0\" + adde_date.toString();\n        }\n        meta.added_date = `${added_year}-${added_month}-${adde_date}`\n  \n        let currentTime = \"\";\n        let hours = Math.floor(meta.currentTime / 60 / 60)\n        let minutes = Math.floor((meta.currentTime / 60) % 60)\n        let seconds = Math.floor(meta.currentTime % 60);\n        if (hours >= 1) {\n          currentTime += `${hours}:`\n        }\n        if (minutes < 10) {\n          minutes = `0${minutes}`;\n        }\n        if (seconds < 10) {\n          seconds = `0${seconds}`\n        }\n        currentTime += `${minutes}:${seconds}`\n        meta.currentTimeSeconds = meta.currentTime;\n        meta.currentTime = currentTime;\n        console.log(videoRef)\n        videoRef.current.setTitle(meta.title);\n  \n        setInWatchList(meta.inwatchlist);\n        setWatched(meta.watched);\n        setMetadata(meta);\n        setTrailer(meta.trailer);\n        meta.actors = meta.actors.sort((a, b) => {\n          return parseFloat(a.order) - parseFloat(b.order);\n        });\n        setActors(meta.actors);\n\n        if (router.query.autoPlay) {\n          videoRef.current.show();\n        }\n      }).then(() => {\n        setLoaded(true)\n      });\n    });\n  }, []);\n\n  const markAsWatched = () => {\n    validateServerAccess(server, (serverToken) => {\n      fetch(`${server.server_ip}/api/movies/${id}/setWatched?watched=true&token=${serverToken}`)\n      .then(r => r.json())\n      .then(status => {\n        if (status.success) {\n          setWatched(true);\n        } else {\n          console.log(\"ERROR MARKING AS WATCHED: \" + status);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n  }\n\n  const markAsNotWatched = () => {\n    validateServerAccess(server, (serverToken) => {\n      fetch(`${server.server_ip}/api/movies/${id}/setWatched?watched=false&token=${serverToken}`)\n      .then(r => r.json())\n      .then(status => {\n        if (status.success) {\n          setWatched(false);\n        } else {\n          console.log(\"ERROR MARKING AS WATCHED: \" + status);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    });\n  }\n\n  const addToWatchList = () => {\n    validateServerAccess(server, (serverToken) => {\n      fetch(`${server.server_ip}/api/movies/${id}/addToWatchList?add=true&token=${serverToken}`)\n      .then(r => r.json())\n      .then(status => {\n        if (status.success) {\n          setInWatchList(true);\n        } else {\n          console.log(\"ERROR adding to watchlist: \" + status);\n        }\n      })      .catch(err => {\n        console.log(err);\n      });\n    });\n  }\n\n  const removeFromWatchList = () => {\n    validateServerAccess(server, (serverToken) => {\n      fetch(`${server.server_ip}/api/movies/${id}/addToWatchList?add=false&token=${serverToken}`)\n      .then(r => r.json())\n      .then(status => {\n        if (status.success) {\n          setInWatchList(false);\n        } else {\n          console.log(\"ERROR removing from watchlist: \" + status);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    });\n  }\n\n  const searchMetadata = (event) => {\n    let search = metadataSearch.current.value;\n    if(search != \"\"){\n      validateServerAccess(server, (serverToken) => {\n        fetch(`${server.server_ip}/api/movies/searchMetadata?search=${search}&token=${serverToken}`)\n        .then(r => r.json())\n        .then(result => {\n          console.log(result);\n          let metadataElements = [];\n          for (let movie of result) {\n            let img = movie.poster_path !== null ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750' \n            metadataElements.push(\n              <ListGroup.Item key={movie.id} className={Styles.metadataSearchRow} data-metadataid={movie.id}>\n                <Image src={img} />\n                <div>\n                  <h5>{movie.title}</h5>\n                  <p>{movie.overview}</p>\n                </div>\n                <Button onClick={() => updateMetadata(movie.id)}>Välj</Button>\n              </ListGroup.Item>\n            );        \n          }\n          setMetadataSearchResult(metadataElements);\n        });\n      });\n    }\n   \n    event.preventDefault();\n  }\n\n  const updateMetadata = (metadataID) => {\n    validateServerAccess(server, (serverToken) => {\n      fetch(`${server.server_ip}/api/movies/${id}/updateMetadata?metadataID=${metadataID}&token=${serverToken}`)\n      .then(r => r.json())\n      .then(json => {\n        if (json.success) {\n          Router.reload(window.location.pathname);\n        }\n      });\n    });\n  }\n\n\n  const getActors = () => {\n    let elements = [];\n    for (const actor of actors) {\n      elements.push(\n        <Actor name={actor.name} characterName={actor.character} image={actor.image} />\n      )\n    }\n    return elements;\n  }\n\n  const getRecommended = () => {\n    let elements = [];\n    for (const movie of recommended) {\n      let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000' \n      elements.push(\n          <MovieBackdrop markAsDoneButton id={movie.id} time={0} runtime={0} title={movie.title} overview={movie.overview} backdrop={img} onClick={(id) => selectMovie(movie.id)}></MovieBackdrop>\n      );\n    }\n    return elements;\n  }\n\n  const selectMovie = (id) => {\n    Router.push(`/server/${server.server_id}/movies/video/${id}`);\n    Router.events.on(\"routeChangeComplete\", () => {\n      Router.reload(window.location.pathname);\n\n\n    });\n  }\n  \n  const scrollLeft = (id) => {\n    document.getElementById(id).scrollLeft -= (window.innerWidth)*0.8;\n    window.scrollTo(window.scrollX, window.scrollY - 1);\n    window.scrollTo(window.scrollX, window.scrollY + 1);\n  }\n  const scrollRight = (id) => {\n      document.getElementById(id).scrollLeft += (window.innerWidth)*0.8;\n      window.scrollTo(window.scrollX, window.scrollY - 1);\n      window.scrollTo(window.scrollX, window.scrollY + 1);\n  }\n  \n  return (\n    <>\n    <VideoComponent ref={videoRef} server={server} serverToken={serverToken}\n                    internalID={id} Movie\n                    >\n    </VideoComponent>\n    <Head>\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap\" rel=\"stylesheet\" />\n    <script src=\"https://vjs.zencdn.net/7.7.6/video.js\"></script>\n\n    <script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"></script>\n    <link href=\"https://vjs.zencdn.net/7.7.6/video-js.css\" rel=\"stylesheet\" />\n    <script type=\"text/javascript\" src=\"https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\"></script>\n\n    </Head>\n    {(!loaded || !recommendedLoaded) &&\n      <div className={Styles.loadingioSpinnerEclipse}>\n          <div className={Styles.ldio}>\n              <div></div>\n          </div>\n      </div>\n    }\n    {loaded && recommendedLoaded && \n    <>\n\n\n\n\n    {trailer !== false && viewTrailer &&\n    <VideoTrailer onClose={() => setViewTrailer(false)} videoPath={trailer} />\n    }\n\n\n    <div id=\"container\">\n    <div style={{backgroundImage: `url('https://image.tmdb.org/t/p/original${metadata.backdrop}')`}} className={Styles.background}></div>\n    <div className=\"backIcon\" onClick={() => {\n      Router.back();\n      Router.events.on(\"routeChangeComplete\", () => {\n        Router.reload(window.location.pathname);\n      });\n      }}></div>\n\n\n    {metadataBox &&\n      <div className=\"metadataBox\">\n        <Form onSubmit={searchMetadata}>\n          <Form.Group controlId=\"formSearch\">\n            <Form.Label>Uppdatera metadata för {metadata.path}</Form.Label>\n            <Form.Control ref={metadataSearch} type=\"text\" placeholder=\"Sök efter ny metadata...\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Sök\n          </Button>\n        </Form>\n        <div style={{clear: 'both'}}></div>\n\n        <ListGroup id=\"metadataSearchResult\">\n          {metadataSearchResult}\n        </ListGroup>\n      </div>\n    }\n\n\n    <div className={Styles.top}>\n      <div className={Styles.poster} style={{backgroundImage: `url('https://image.tmdb.org/t/p/original${metadata.poster}')`}} />\n      <div className={Styles.description}>\n        <h1>{metadata.title}</h1>\n        <div className={Styles.metadata}>\n          <p className={Styles.releaseDate}>{metadata.release_date}</p>\n          <p className={Styles.runtime}>{Math.floor(metadata.runtime / 60) + \"h \" + metadata.runtime%60+\"m\"}</p>\n          <p className={Styles.endsat}>Slutar vid {metadata.finish_at}</p>\n          <p className={Styles.addedDate}>Tillagd {metadata.added_date}</p>\n        </div>\n        <div className={Styles.overview}>\n            <p>{metadata.overview}</p>\n        </div>\n        <div className={Styles.actions}>\n          {metadata.currentTimeSeconds > 0 &&\n          <div style={{marginRight: \"15px\"}}>\n            <div className={Styles.playButton} onClick={() => videoRef.current.show(metadata.currentTimeSeconds)}></div>\n            <p style={{marginTop: \"5px\", fontSize: '14px'}}>Återuppta från {metadata.currentTime}</p>\n          </div>\n          }\n          <div style={{marginRight: \"15px\"}}>\n            <div className={Styles.playButton} onClick={() => videoRef.current.show()}></div>\n            <p style={{marginTop: \"5px\", fontSize: '14px'}}>Spela från början</p>\n          </div>\n          <div>\n            <div className={Styles.playButton} onClick={() => setViewTrailer(true)}></div>\n            <p style={{marginTop: \"5px\", fontSize: '14px'}}>Visa trailer</p>\n          </div>\n          {watched &&\n          <>\n              <div style={{marginLeft: \"15px\"}}>\n              <div id=\"markAsWatched\" style={{backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/cross.svg')`}} className={Styles.playButton} onClick={() => markAsNotWatched()}></div>\n              <p id=\"markAsWatchedText\" style={{marginTop: \"5px\", fontSize: '14px'}}>Markera som osedd</p>\n              </div>\n          </>\n          }\n          {!watched &&\n          <>\n            <div style={{marginLeft: \"15px\"}}>\n              <div id=\"markAsWatched\" style={{backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/eye.svg')`}} className={Styles.playButton} onClick={() => markAsWatched()}></div>\n              <p id=\"markAsWatchedText\" style={{marginTop: \"5px\", fontSize: '14px'}}>Markera som sedd</p>\n            </div>\n          </>\n          }\n          {inWatchList &&\n          <>\n              <div style={{marginLeft: \"15px\"}}>\n              <div id=\"inWatchList\" style={{backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/cross.svg')`}} className={Styles.playButton} onClick={() => removeFromWatchList()}></div>\n              <p id=\"inWatchListText\" style={{marginTop: \"5px\", fontSize: '14px'}}>Ta bort från watchlist</p>\n              </div>\n          </>\n          }\n          {!inWatchList &&\n          <>\n            <div style={{marginLeft: \"15px\"}}>\n              <div id=\"inWatchList\" style={{backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/eye.svg')`}} className={Styles.playButton} onClick={() => addToWatchList()}></div>\n              <p id=\"inWatchListText\" style={{marginTop: \"5px\", fontSize: '14px'}}>Lägg till i watchlist</p>\n            </div>\n          </>\n          }\n          <div>\n            <div style={{marginLeft: \"15px\", backgroundImage: `url('${process.env.NEXT_PUBLIC_SERVER_URL}/images/search.svg')`}} className={Styles.playButton} onClick={() => setMetadataBox(true)}></div>\n            <p style={{marginLeft: \"15px\", marginTop: \"5px\", fontSize: '14px'}}>Uppdatera metadata</p>\n          </div>\n\n          <ChangeImages id={id} server={server} serverToken={serverToken} type=\"movies\"></ChangeImages>\n\n        </div>\n      </div>\n    </div>\n    <div className={Styles.bottom}>\n      <h1>Actors</h1>\n      <div className={Styles.actors}>\n        <div id=\"actors\" className={Styles.actorBox}>\n          {getActors()}\n        </div>\n        {actors.length * 200 > windowSize.width &&\n                                <>\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('actors')}>\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" height=\"70\" />\n                                    </div>\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('actors')}>\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" height=\"70\" />\n                                    </div>\n                                </>\n                            }\n      </div>\n\n    <h1>Recommended</h1>\n    {recommended.length > 0 &&\n                    <div style={{position: 'relative'}}>\n                        <div className={Styles.movieRow}>\n                            <div id=\"recommended\" className={Styles.scrollable}>\n                                {getRecommended()}\n                            </div>\n                            {recommended.length * 480 > windowSize.width &&\n                                <div>\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('recommended')}>\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" height=\"70\" />\n                                    </div>\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('recommended')}>\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" height=\"70\" />\n                                    </div>\n                                </div>\n                            }\n                        </div> \n                    <hr className={Styles.divider}></hr>\n                    </div> \n                }\n    </div>\n    </div>\n    </>\n    }\n    </>\n  )\n}\n\n// Get the information about the server and send it to the front end before render (this is server-side)\nexport async function getServerSideProps(context) {\n  let serverId = context.params.server;\n  let movieID = context.params.id;\n\n  return await fetch(`http://localhost:${process.env.SERVER_PORT}${process.env.SERVER_SUB_FOLDER}/api/servers/getServer`, {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n          id: serverId\n      }),\n  })\n  .then((r) => r.json())\n  .then(async (data) =>{\n    return {\n      props: {\n          server: data.server,\n          serverToken: cookies(context).serverToken || ''\n      }\n    }\n\n  });\n}\n"]},"metadata":{},"sourceType":"module"}