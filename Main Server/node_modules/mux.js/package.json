{
  "_args": [
    [
      "mux.js@5.11.0",
      "/mnt/h/Code/Dose/Main Server"
    ]
  ],
  "_development": true,
  "_from": "mux.js@5.11.0",
  "_id": "mux.js@5.11.0",
  "_inBundle": false,
  "_integrity": "sha512-Q/iLfohHh5Pp6lW7EFtcxNuaCNJ3Ruywfy46pWLsY+yIxR1kXXImYY1wOhg8jLdBMs1kRaZqsiB4Zncsiw0a2Q==",
  "_location": "/mux.js",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "mux.js@5.11.0",
    "name": "mux.js",
    "escapedName": "mux.js",
    "rawSpec": "5.11.0",
    "saveSpec": null,
    "fetchSpec": "5.11.0"
  },
  "_requiredBy": [
    "/@videojs/http-streaming"
  ],
  "_resolved": "https://registry.npmjs.org/mux.js/-/mux.js-5.11.0.tgz",
  "_spec": "5.11.0",
  "_where": "/mnt/h/Code/Dose/Main Server",
  "author": {
    "name": "Brightcove"
  },
  "bin": {
    "muxjs-transmux": "bin/transmux.js"
  },
  "browser": "dist/mux.js",
  "browserslist": [
    "defaults",
    "ie 11"
  ],
  "bugs": {
    "url": "https://github.com/videojs/mux.js/issues"
  },
  "dependencies": {
    "@babel/runtime": "^7.11.2"
  },
  "description": "A collection of lightweight utilities for inspecting and manipulating video container formats.",
  "devDependencies": {
    "@babel/cli": "^7.11.6",
    "@videojs/babel-config": "^0.2.0",
    "@videojs/generator-helpers": "~2.0.1",
    "@videojs/vhs-utils": "^3.0.0",
    "global": "^4.4.0",
    "karma": "^5.0.0",
    "rollup": "^2.37.1",
    "rollup-plugin-data-files": "^0.1.0",
    "rollup-plugin-worker-factory": "^0.3.0",
    "sinon": "^8.1.1",
    "videojs-generate-karma-config": "~7.1.0",
    "videojs-generate-rollup-config": "~6.2.0",
    "videojs-generator-verify": "~3.0.2",
    "videojs-standard": "^8.0.4"
  },
  "engines": {
    "node": ">=8",
    "npm": ">=5"
  },
  "files": [
    "bin/",
    "CONTRIBUTING.md",
    "cjs/",
    "dist/",
    "docs/",
    "es/",
    "lib/",
    "index.html",
    "scripts/",
    "src/",
    "test/"
  ],
  "generator-videojs-plugin": {
    "version": "7.7.3"
  },
  "homepage": "https://github.com/videojs/mux.js#readme",
  "husky": {
    "hooks": {
      "pre-commit": ": lint-staged"
    }
  },
  "keywords": [
    "video",
    "container",
    "transmux",
    "mux",
    "player",
    "hls",
    "mp4",
    "flv",
    "aac",
    "h264"
  ],
  "license": "Apache-2.0",
  "lint-staged": {
    "*.js": "vjsstandard --fix",
    "README.md": "doctoc --notitle"
  },
  "main": "./cjs/index.js",
  "module": "es/index.js",
  "name": "mux.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/videojs/mux.js.git"
  },
  "scripts": {
    "build": "npm-run-all -s clean -p build:*",
    "build-prod": "cross-env-shell NO_TEST_BUNDLE=1 'npm run build'",
    "build-test": "cross-env-shell TEST_BUNDLE_ONLY=1 'npm run build'",
    "build:cjs": "babel-config-cjs -d ./cjs ./lib",
    "build:es": "babel-config-es -d ./es ./lib",
    "build:js": "rollup -c scripts/rollup.config.js",
    "clean": "shx rm -rf ./dist ./test/dist ./cjs ./es && shx mkdir -p ./dist ./test/dist ./cjs ./es",
    "docs": "npm-run-all docs:*",
    "docs:toc": "doctoc --notitle README.md",
    "lint": ": vjsstandard",
    "netlify": "node scripts/netlify.js",
    "prepublishOnly": "npm ci && npm-run-all build-prod && vjsverify --verbose",
    "preversion": "npm test",
    "server": "karma start scripts/karma.conf.js --singleRun=false --auto-watch",
    "start": "npm-run-all -p server watch",
    "test": "npm-run-all lint build-test test:*",
    "test:browser": "karma start scripts/karma.conf.js",
    "test:node": "node --experimental-worker \"$(which qunit)\" test/dist/bundle.js",
    "update-changelog": "conventional-changelog -p videojs -i CHANGELOG.md -s",
    "version": "is-prerelease || npm run update-changelog && git add CHANGELOG.md",
    "watch": "npm-run-all -p watch:*",
    "watch:cjs": "npm run build:cjs -- -w",
    "watch:es": "npm run build:es -- -w",
    "watch:js": "npm run build:js -- -w"
  },
  "version": "5.11.0",
  "vjsstandard": {
    "ignore": [
      "es",
      "cjs",
      "dist",
      "docs",
      "test/dist"
    ]
  }
}
