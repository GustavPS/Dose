{"ast":null,"code":"import _defineProperty from \"/mnt/h/Code/Dose/Main Server/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/mnt/h/Code/Dose/Main Server/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/h/Code/Dose/Main Server/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/mnt/h/Code/Dose/Main Server/pages/server/[server]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Layout from '../../../components/layout';\nimport Head from 'next/head';\nimport fetch from 'node-fetch';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { Carousel, Container, Row, Col } from 'react-bootstrap';\nimport Link from 'next/link';\nimport validateServerAccess from '../../../lib/validateServerAccess';\nimport useWindowSize from '../../../components/hooks/WindowSize';\nimport Styles from '../../../styles/server.module.css';\nimport MovieBackdrop from '../../../components/movieBackdrop';\nimport EpisodePoster from '../../../components/episodePoster';\nimport socketIOClient from \"socket.io-client\";\nimport { useTransition, animated, setItems } from 'react-spring';\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json().then(function (result) {\n      return result;\n    });\n  });\n};\n\nvar main = function main(props) {\n  _s();\n\n  // props.server is from the SSR under this function\n  var server = props.server;\n\n  var _useState = useState(null),\n      latestMovies = _useState[0],\n      setLatesMovies = _useState[1];\n\n  var _useState2 = useState([]),\n      ongoingMovies = _useState2[0],\n      setOngoingMovies = _useState2[1];\n\n  var _useState3 = useState([]),\n      movieWatchList = _useState3[0],\n      setMovieWatchList = _useState3[1];\n\n  var _useState4 = useState([]),\n      ongoingShows = _useState4[0],\n      setOngoingShows = _useState4[1];\n\n  var _useState5 = useState([]),\n      newlyAddedMovies = _useState5[0],\n      setNewlyAddedMovies = _useState5[1];\n\n  var _useState6 = useState([]),\n      newlyAddedShows = _useState6[0],\n      setNewlyAddedShows = _useState6[1];\n\n  var _useState7 = useState([]),\n      newlyAddedEpisodes = _useState7[0],\n      setNewlyAddedEpisodes = _useState7[1];\n\n  var _useState8 = useState(false),\n      recommendedMovie = _useState8[0],\n      setRecommendedMovie = _useState8[1];\n\n  var _useState9 = useState([]),\n      popularMovies = _useState9[0],\n      setPopularMovies = _useState9[1];\n\n  var loading = 0;\n\n  var _useState10 = useState(false),\n      loaded = _useState10[0],\n      setLoaded = _useState10[1];\n\n  var transitions = useTransition(newlyAddedMovies, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    delay: 200,\n    onRest: function onRest() {\n      return setItems([]);\n    }\n  });\n  var windowSize = useWindowSize();\n  var allContent = [];\n  /**\r\n   * Makes a query to the current active server for a list of movies\r\n   * \r\n   * @param {string} genre \r\n   * @param {string} orderby \r\n   * @param {int} limit \r\n   */\n\n  var getMovieList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var genre,\n          orderby,\n          limit,\n          ongoing,\n          watchlist,\n          popular,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              genre = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n              orderby = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n              limit = _args.length > 2 && _args[2] !== undefined ? _args[2] : 20;\n              ongoing = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;\n              watchlist = _args.length > 4 && _args[4] !== undefined ? _args[4] : false;\n              popular = _args.length > 5 && _args[5] !== undefined ? _args[5] : false;\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var url;\n\n                if (ongoing) {\n                  url = \"\".concat(server.server_ip, \"/api/movies/list/ongoing?\").concat(orderby !== null ? 'orderby=' + orderby + '&' : '', \"limit=\").concat(limit, \"&token=\").concat(cookie.get('serverToken'));\n                } else if (watchlist) {\n                  url = \"\".concat(server.server_ip, \"/api/movies/list/watchlist?\").concat(orderby !== null ? 'orderby=' + orderby + '&' : '', \"limit=\").concat(limit, \"&token=\").concat(cookie.get('serverToken'));\n                } else if (popular) {\n                  url = \"\".concat(server.server_ip, \"/api/movies/list/popular?\").concat(orderby !== null ? 'orderby=' + orderby + '&' : '', \"limit=\").concat(limit, \"&token=\").concat(cookie.get('serverToken'));\n                } else {\n                  url = \"\".concat(server.server_ip, \"/api/movies/list\").concat(genre !== null ? '/genre/' + genre : '', \"?\").concat(orderby !== null ? 'orderby=' + orderby + '&' : '', \"limit=\").concat(limit, \"&token=\").concat(cookie.get('serverToken'));\n                }\n\n                fetch(url, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    limit: 20\n                  })\n                }).then(function (r) {\n                  return r.json();\n                }).then(function (response) {\n                  // Mark the movies active image\n                  response.result.forEach(function (movie) {\n                    var _iterator = _createForOfIteratorHelper(movie.images),\n                        _step;\n\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var image = _step.value;\n\n                        if (image.active) {\n                          if (image.type === 'BACKDROP') {\n                            if (image.path === 'no_image') {\n                              movie.backdrop = null;\n                            } else {\n                              movie.backdrop = image.path;\n                            }\n                          } else {\n                            if (image.path === 'no_image') {\n                              movie.backdrop = null;\n                            } else {\n                              movie.poster = image.path;\n                            }\n                          }\n\n                          if (movie.backdrop != null && movie.poster != null) {\n                            break;\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                  });\n                  resolve(response.result);\n                });\n              }));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getMovieList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\r\n   * Makes a query to the current active server for a list of new episodes\r\n   * \r\n   * @param {string} genre \r\n   * @param {string} orderby \r\n   * @param {int} limit \r\n   */\n\n\n  var getNewEpisodeList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var orderby,\n          limit,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              orderby = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : null;\n              limit = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 20;\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var url;\n                url = \"\".concat(server.server_ip, \"/api/series/list/episodes?\").concat(orderby !== null ? 'orderby=' + orderby + '&' : '', \"limit=\").concat(limit, \"&token=\").concat(cookie.get('serverToken'));\n                fetch(url, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    limit: 20\n                  })\n                }).then(function (r) {\n                  return r.json();\n                }).then(function (response) {\n                  // Mark the movies active image\n                  response.result.forEach(function (episode) {\n                    var _iterator2 = _createForOfIteratorHelper(episode.images),\n                        _step2;\n\n                    try {\n                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                        var image = _step2.value;\n\n                        if (image.active) {\n                          if (image.type === 'BACKDROP') {\n                            if (image.path === 'no_image') {\n                              episode.backdrop = null;\n                            } else {\n                              episode.backdrop = image.path;\n                            }\n                          } else if (image.type === 'POSTER') {\n                            if (image.path === 'no_image') {\n                              episode.poster = null;\n                            } else {\n                              episode.poster = image.path;\n                            }\n                          } else {\n                            if (image.path === 'no_image') {\n                              episode.backdrop = null;\n                            } else {\n                              episode.poster = image.path;\n                            }\n                          }\n\n                          if (episode.backdrop != null && episode.poster != null) {\n                            break;\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _iterator2.e(err);\n                    } finally {\n                      _iterator2.f();\n                    }\n                  });\n                  console.log(response.result);\n                  resolve(response.result);\n                });\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getNewEpisodeList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getShowList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var genre,\n          orderby,\n          limit,\n          ongoing,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              genre = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : null;\n              orderby = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : null;\n              limit = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 20;\n              ongoing = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : false;\n              return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var url;\n\n                if (ongoing) {\n                  url = \"\".concat(server.server_ip, \"/api/series/list/ongoing?\").concat(orderby !== null ? 'orderby=' + orderby + '&' : '', \"limit=\").concat(limit, \"&token=\").concat(cookie.get('serverToken'));\n                } else {\n                  url = \"\".concat(server.server_ip, \"/api/series/list\").concat(genre !== null ? '/genre/' + genre : '', \"?\").concat(orderby !== null ? 'orderby=' + orderby + '&' : '', \"limit=\").concat(limit, \"&token=\").concat(cookie.get('serverToken'));\n                }\n\n                fetch(url, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    limit: 20\n                  })\n                }).then(function (r) {\n                  return r.json();\n                }).then(function (response) {\n                  // Mark the movies active image\n                  if (ongoing) {\n                    response.upcoming.forEach(function (movie) {\n                      var _iterator3 = _createForOfIteratorHelper(movie.images),\n                          _step3;\n\n                      try {\n                        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                          var image = _step3.value;\n\n                          if (image.active) {\n                            if (image.type === 'BACKDROP') {\n                              if (image.path === 'no_image') {\n                                movie.backdrop = null;\n                              } else {\n                                movie.backdrop = image.path;\n                              }\n                            } else {\n                              if (image.path === 'no_image') {\n                                movie.backdrop = null;\n                              } else {\n                                movie.poster = image.path;\n                              }\n                            }\n\n                            if (movie.backdrop != null && movie.poster != null) {\n                              break;\n                            }\n                          }\n                        }\n                      } catch (err) {\n                        _iterator3.e(err);\n                      } finally {\n                        _iterator3.f();\n                      }\n                    });\n                    response.ongoing.forEach(function (movie) {\n                      var _iterator4 = _createForOfIteratorHelper(movie.images),\n                          _step4;\n\n                      try {\n                        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                          var image = _step4.value;\n\n                          if (image.active) {\n                            if (image.type === 'BACKDROP') {\n                              if (image.path === 'no_image') {\n                                movie.backdrop = null;\n                              } else {\n                                movie.backdrop = image.path;\n                              }\n                            } else {\n                              if (image.path === 'no_image') {\n                                movie.backdrop = null;\n                              } else {\n                                movie.poster = image.path;\n                              }\n                            }\n\n                            if (movie.backdrop != null && movie.poster != null) {\n                              break;\n                            }\n                          }\n                        }\n                      } catch (err) {\n                        _iterator4.e(err);\n                      } finally {\n                        _iterator4.f();\n                      }\n                    });\n                    resolve(response);\n                    return;\n                  }\n\n                  response.result.forEach(function (movie) {\n                    var _iterator5 = _createForOfIteratorHelper(movie.images),\n                        _step5;\n\n                    try {\n                      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                        var image = _step5.value;\n\n                        if (image.active) {\n                          if (image.type === 'BACKDROP') {\n                            if (image.path === 'no_image') {\n                              movie.backdrop = null;\n                            } else {\n                              movie.backdrop = image.path;\n                            }\n                          } else {\n                            if (image.path === 'no_image') {\n                              movie.backdrop = null;\n                            } else {\n                              movie.poster = image.path;\n                            }\n                          }\n\n                          if (movie.backdrop != null && movie.poster != null) {\n                            break;\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _iterator5.e(err);\n                    } finally {\n                      _iterator5.f();\n                    }\n                  });\n                  resolve(response.result);\n                });\n              }));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getShowList() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getActiveImage = function getActiveImage(images, type) {\n    var _iterator6 = _createForOfIteratorHelper(images),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var image = _step6.value;\n\n        if (image.type === type && image.active && image.path != \"no_image\") {\n          return image;\n        }\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    return false;\n  };\n\n  useEffect(function () {\n    validateServerAccess(server, function (serverToken) {\n      var socket = socketIOClient(server.server_ip);\n      socket.on(\"MOVIE\", function (movie) {\n        var _jsx;\n\n        console.log(movie);\n        var movieElements = newlyAddedMovies;\n        var img = movie.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(movie.backdrop) : 'https://via.placeholder.com/2000x1000';\n        movieElements.push(__jsx(MovieBackdrop, (_jsx = {\n          markAsDoneButton: true,\n          id: movie.id,\n          time: movie.watchtime,\n          runtime: movie.runtime,\n          title: movie.title,\n          overview: movie.overview\n        }, _defineProperty(_jsx, \"runtime\", movie.runtime), _defineProperty(_jsx, \"backdrop\", img), _defineProperty(_jsx, \"onClick\", function onClick(id) {\n          return selectMovie(movie.id);\n        }), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }), _jsx)));\n        setNewlyAddedMovies(movieElements);\n      }); // Get recommended video (random video right now)\n\n      fetch(\"\".concat(server.server_ip, \"/api/movies/list/random?trailer=true&token=\").concat(cookie.get('serverToken')), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (r) {\n        return r.json();\n      }).then(function (result) {\n        if (result.status === 'success') {\n          result.movie.activeLogo = getActiveImage(result.movie.images, 'LOGO');\n          console.log(result);\n          setRecommendedMovie(result.movie);\n        } else {\n          console.log(\"Error getting recommended movie\");\n        }\n      }); // Get all the newest released movies (The slieshow)\n\n      getMovieList(null, 'release_date', 5).then(function (movies) {\n        movies.reverse();\n        var movieElements = [];\n\n        var _iterator7 = _createForOfIteratorHelper(movies),\n            _step7;\n\n        try {\n          var _loop = function _loop() {\n            var movie = _step7.value;\n            var img = movie.backdrop !== null ? \"https://image.tmdb.org/t/p/original/\".concat(movie.backdrop) : 'https://via.placeholder.com/2000x1000';\n            movieElements.push(__jsx(Carousel.Item, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 25\n              }\n            }, __jsx(\"img\", {\n              className: \"d-block w-100\",\n              src: img,\n              alt: movie.title,\n              style: {\n                objectFit: 'cover',\n                height: '90vh',\n                minHeight: '500px',\n                cursor: 'pointer'\n              },\n              onClick: function onClick() {\n                selectMovie(movie.id);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 29\n              }\n            }), __jsx(Carousel.Caption, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 29\n              }\n            }, __jsx(\"h3\", {\n              style: {\n                textShadow: '0px 0px 6px #000'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }\n            }, movie.title), __jsx(\"p\", {\n              style: {\n                textShadow: '0px 0px 6px #000'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }\n            }, movie.overview))));\n          };\n\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n\n        loading++;\n        setLatesMovies(movieElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      }); // Get popular movies\n\n      getMovieList(null, 'release_date', 20, false, false, true).then(function (movies) {\n        movies.reverse();\n        var movieElements = [];\n\n        var _iterator8 = _createForOfIteratorHelper(movies),\n            _step8;\n\n        try {\n          var _loop2 = function _loop2() {\n            var _jsx2;\n\n            var movie = _step8.value;\n            var img = movie.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(movie.backdrop) : 'https://via.placeholder.com/2000x1000';\n            movieElements.push(__jsx(MovieBackdrop, (_jsx2 = {\n              markAsDoneButton: true,\n              id: movie.id,\n              time: movie.watchtime,\n              runtime: movie.runtime,\n              title: movie.title,\n              overview: movie.overview\n            }, _defineProperty(_jsx2, \"runtime\", movie.runtime), _defineProperty(_jsx2, \"backdrop\", img), _defineProperty(_jsx2, \"onClick\", function onClick(id) {\n              return selectMovie(movie.id);\n            }), _defineProperty(_jsx2, \"__self\", _this), _defineProperty(_jsx2, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 25\n            }), _jsx2)));\n          };\n\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            _loop2();\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        loading++;\n        setPopularMovies(movieElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      }); // Get ongoing movies\n\n      getMovieList(null, 'release_date', 20, true).then(function (movies) {\n        movies.reverse();\n        var movieElements = [];\n\n        var _iterator9 = _createForOfIteratorHelper(movies),\n            _step9;\n\n        try {\n          var _loop3 = function _loop3() {\n            var _jsx3;\n\n            var movie = _step9.value;\n            var img = movie.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(movie.backdrop) : 'https://via.placeholder.com/2000x1000';\n            movieElements.push(__jsx(MovieBackdrop, (_jsx3 = {\n              markAsDoneButton: true,\n              id: movie.id,\n              time: movie.watchtime,\n              runtime: movie.runtime,\n              title: movie.title,\n              overview: movie.overview\n            }, _defineProperty(_jsx3, \"runtime\", movie.runtime), _defineProperty(_jsx3, \"backdrop\", img), _defineProperty(_jsx3, \"onClick\", function onClick(id) {\n              return selectMovie(movie.id);\n            }), _defineProperty(_jsx3, \"__self\", _this), _defineProperty(_jsx3, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 25\n            }), _jsx3)));\n          };\n\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            _loop3();\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n\n        loading++;\n        setOngoingMovies(movieElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      }); // Get watchlist for movies\n\n      getMovieList(null, 'release_date', 20, false, true).then(function (movies) {\n        movies.reverse();\n        var movieElements = [];\n\n        var _iterator10 = _createForOfIteratorHelper(movies),\n            _step10;\n\n        try {\n          var _loop4 = function _loop4() {\n            var _jsx4;\n\n            var movie = _step10.value;\n            var img = movie.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(movie.backdrop) : 'https://via.placeholder.com/2000x1000';\n            movieElements.push(__jsx(MovieBackdrop, (_jsx4 = {\n              markAsDoneButton: true,\n              id: movie.id,\n              time: movie.watchtime,\n              runtime: movie.runtime,\n              title: movie.title,\n              overview: movie.overview\n            }, _defineProperty(_jsx4, \"runtime\", movie.runtime), _defineProperty(_jsx4, \"backdrop\", img), _defineProperty(_jsx4, \"onClick\", function onClick(id) {\n              return selectMovie(movie.id);\n            }), _defineProperty(_jsx4, \"__self\", _this), _defineProperty(_jsx4, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 25\n            }), _jsx4)));\n          };\n\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            _loop4();\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n\n        loading++;\n        setMovieWatchList(movieElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      }); // Get newly added movies\n\n      getMovieList(null, 'added_date', 20).then(function (movies) {\n        var movieElements = [];\n\n        var _iterator11 = _createForOfIteratorHelper(movies),\n            _step11;\n\n        try {\n          var _loop5 = function _loop5() {\n            var _jsx5;\n\n            var movie = _step11.value;\n            var img = movie.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(movie.backdrop) : 'https://via.placeholder.com/2000x1000';\n            movieElements.push(__jsx(MovieBackdrop, (_jsx5 = {\n              markAsDoneButton: true,\n              id: movie.id,\n              time: movie.watchtime,\n              runtime: movie.runtime,\n              title: movie.title,\n              overview: movie.overview\n            }, _defineProperty(_jsx5, \"runtime\", movie.runtime), _defineProperty(_jsx5, \"backdrop\", img), _defineProperty(_jsx5, \"onClick\", function onClick(id) {\n              return selectMovie(movie.id);\n            }), _defineProperty(_jsx5, \"__self\", _this), _defineProperty(_jsx5, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 25\n            }), _jsx5)));\n          };\n\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            _loop5();\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n\n        loading++;\n        setNewlyAddedMovies(movieElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      }); // Get newly added shows\n\n      getShowList(null, 'added_date', 20).then(function (shows) {\n        var showElements = [];\n\n        var _iterator12 = _createForOfIteratorHelper(shows),\n            _step12;\n\n        try {\n          var _loop6 = function _loop6() {\n            var _jsx6;\n\n            var show = _step12.value;\n            var img = show.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(show.backdrop) : 'https://via.placeholder.com/2000x1000';\n            showElements.push(__jsx(MovieBackdrop, (_jsx6 = {\n              markAsDoneButton: true,\n              id: show.id,\n              time: show.watchtime,\n              runtime: show.runtime,\n              title: show.title,\n              overview: show.overview\n            }, _defineProperty(_jsx6, \"runtime\", show.runtime), _defineProperty(_jsx6, \"backdrop\", img), _defineProperty(_jsx6, \"onClick\", function onClick(id) {\n              return selectShow(show.id);\n            }), _defineProperty(_jsx6, \"__self\", _this), _defineProperty(_jsx6, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 25\n            }), _jsx6)));\n          };\n\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            _loop6();\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n\n        loading++;\n        setNewlyAddedShows(showElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      }); // Get ongoing shows\n\n      getShowList(null, 'added_date', 20, true).then(function (result) {\n        var showElements = [];\n\n        var _iterator13 = _createForOfIteratorHelper(result.upcoming),\n            _step13;\n\n        try {\n          var _loop7 = function _loop7() {\n            var _jsx7;\n\n            var show = _step13.value;\n            var img = show.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(show.backdrop) : 'https://via.placeholder.com/2000x1000';\n            showElements.push(__jsx(MovieBackdrop, (_jsx7 = {\n              showTitle: true,\n              markAsDoneButton: true,\n              id: show.id,\n              time: show.time_watched,\n              runtime: show.runtime,\n              title: show.season_name + \" - Episode \" + show.episode_number,\n              overview: show.overview\n            }, _defineProperty(_jsx7, \"runtime\", show.total_time), _defineProperty(_jsx7, \"backdrop\", img), _defineProperty(_jsx7, \"onClick\", function onClick(id) {\n              return selectEpisode(show.show_id, show.season_number, show.episode_number, show.internalepisodeid);\n            }), _defineProperty(_jsx7, \"__self\", _this), _defineProperty(_jsx7, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 25\n            }), _jsx7)));\n          };\n\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            _loop7();\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n\n        var _iterator14 = _createForOfIteratorHelper(result.ongoing),\n            _step14;\n\n        try {\n          var _loop8 = function _loop8() {\n            var _jsx8;\n\n            var show = _step14.value;\n            var img = show.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(show.backdrop) : 'https://via.placeholder.com/2000x1000';\n            showElements.push(__jsx(MovieBackdrop, (_jsx8 = {\n              showTitle: true,\n              markAsDoneButton: true,\n              id: show.id,\n              time: show.time_watched,\n              runtime: show.runtime,\n              title: show.season_name + \" - Episode \" + show.episode_number,\n              overview: show.overview\n            }, _defineProperty(_jsx8, \"runtime\", show.total_time), _defineProperty(_jsx8, \"backdrop\", img), _defineProperty(_jsx8, \"onClick\", function onClick(id) {\n              return selectEpisode(show.show_id, show.season_number, show.episode_number, show.internalepisodeid);\n            }), _defineProperty(_jsx8, \"__self\", _this), _defineProperty(_jsx8, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 25\n            }), _jsx8)));\n          };\n\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            _loop8();\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n\n        loading++;\n        setOngoingShows(showElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      });\n      getNewEpisodeList('added_date', 20).then(function (episodes) {\n        var episodeElements = [];\n\n        var _iterator15 = _createForOfIteratorHelper(episodes),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var episode = _step15.value;\n            var poster = episode.poster !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(episode.poster) : 'https://via.placeholder.com/500x1000';\n            var backdrop = episode.backdrop !== null ? \"https://image.tmdb.org/t/p/w500/\".concat(episode.backdrop) : 'https://via.placeholder.com/500x1000';\n            episodeElements.push(__jsx(EpisodePoster, {\n              show: episode.serie_id,\n              season: episode.season,\n              episode: episode.episode,\n              poster: poster,\n              internalEpisodeID: episode.internalepisodeid,\n              backdrop: backdrop,\n              onClick: function onClick(season, episode, show, internalEpisodeID) {\n                return selectEpisode(show, season, episode, internalEpisodeID);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 25\n              }\n            }));\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n\n        loading++;\n        setNewlyAddedEpisodes(episodeElements);\n      }).then(function () {\n        if (loading == 7) {\n          setLoaded(true);\n        }\n      });\n    });\n  }, [loading, newlyAddedMovies]);\n\n  var selectMovie = function selectMovie(id) {\n    Router.push(\"/server/\".concat(server.server_id, \"/movies/video/\").concat(id));\n  };\n\n  var selectShow = function selectShow(id) {\n    Router.push(\"/server/\".concat(server.server_id, \"/shows/video/\").concat(id));\n  };\n\n  var selectEpisode = function selectEpisode(showID, seasonNumber, episodeNumber, internalEpisodeID) {\n    Router.push(\"/server/\".concat(server.server_id, \"/shows/video/\").concat(showID, \"/season/\").concat(seasonNumber, \"/episode/\").concat(episodeNumber, \"?internalID=\").concat(internalEpisodeID));\n  };\n\n  var scrollLeft = function scrollLeft(id) {\n    document.getElementById(id).scrollLeft -= window.innerWidth * 0.8;\n    window.scrollTo(window.scrollX, window.scrollY - 1);\n    window.scrollTo(window.scrollX, window.scrollY + 1);\n  };\n\n  var scrollRight = function scrollRight(id) {\n    document.getElementById(id).scrollLeft += window.innerWidth * 0.8;\n    window.scrollTo(window.scrollX, window.scrollY - 1);\n    window.scrollTo(window.scrollX, window.scrollY + 1);\n  }; // LAYOUT //\n\n\n  return __jsx(React.Fragment, null, !loaded && __jsx(\"div\", {\n    className: Styles.loadingioSpinnerEclipse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: Styles.ldio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  }))), loaded && __jsx(Layout, {\n    searchEnabled: true,\n    server: server,\n    serverToken: cookie.get('serverToken'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }\n  }), recommendedMovie != false && __jsx(\"div\", {\n    className: Styles.recommended,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }\n  }, __jsx(\"video\", {\n    autoPlay: true,\n    loop: true,\n    preload: \"auto\",\n    muted: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }\n  }, __jsx(\"source\", {\n    src: \"\".concat(server.server_ip, \"/api/trailer/\").concat(recommendedMovie[\"id\"], \"?type=MOVIE&token=\").concat(cookie.get('serverToken')),\n    type: \"video/mp4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: Styles.recommendedInformation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 17\n    }\n  }, recommendedMovie[\"activeLogo\"] != false && __jsx(\"img\", {\n    src: \"https://image.tmdb.org/t/p/original/\".concat(recommendedMovie[\"activeLogo\"].path),\n    className: Styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 21\n    }\n  }), recommendedMovie[\"activeLogo\"] == false && __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 21\n    }\n  }, recommendedMovie[\"title\"]), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 21\n    }\n  }, recommendedMovie[\"overview\"]), __jsx(\"div\", {\n    className: Styles.controls,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"/server/\".concat(server.server_id, \"/movies/video/\").concat(recommendedMovie[\"id\"], \"?autoPlay=true\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/001-play-button.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 29\n    }\n  })), __jsx(Link, {\n    href: \"/server/\".concat(server.server_id, \"/movies/video/\").concat(recommendedMovie[\"id\"]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/002-information.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 29\n    }\n  }))))), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    className: Styles.contentRows,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 13\n    }\n  }, popularMovies.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 25\n    }\n  }, \"Popul\\xE4rt just nu\"), __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"popularMovies\",\n    className: Styles.scrollable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 29\n    }\n  }, popularMovies), popularMovies.length * 480 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: function onClick() {\n      return scrollLeft('popularMovies');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/left.svg\"),\n    width: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: function onClick() {\n      return scrollRight('popularMovies');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/right.svg\"),\n    width: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 21\n    }\n  })), ongoingMovies.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 25\n    }\n  }, \"P\\xE5g\\xE5ende filmer\"), __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"ongoingMovies\",\n    className: Styles.scrollable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 29\n    }\n  }, ongoingMovies), ongoingMovies.length * 480 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: function onClick() {\n      return scrollLeft('ongoingMovies');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/left.svg\"),\n    width: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: function onClick() {\n      return scrollRight('ongoingMovies');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/right.svg\"),\n    width: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 21\n    }\n  })), ongoingShows.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 25\n    }\n  }, \"P\\xE5g\\xE5ende serier\"), __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"ongoingShows\",\n    className: Styles.scrollable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 29\n    }\n  }, ongoingShows), ongoingShows.length * 480 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: function onClick() {\n      return scrollLeft('ongoingShows');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/left.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: function onClick() {\n      return scrollRight('ongoingShows');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/right.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 21\n    }\n  })), newlyAddedMovies.length > 0 && __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/server/\" + server.server_id + \"/movies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 80\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 108\n    }\n  }, \"Nyligen tillagda filmer\"))), __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"newlyAddedMovies\",\n    className: Styles.scrollable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 29\n    }\n  }, newlyAddedMovies), newlyAddedMovies.length * 480 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: function onClick() {\n      return scrollLeft('newlyAddedMovies');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/left.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: function onClick() {\n      return scrollRight('newlyAddedMovies');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/right.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 21\n    }\n  })), movieWatchList.length > 0 && __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/server/\" + server.server_id + \"/movies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 80\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 108\n    }\n  }, \"Filmer att se senare\"))), __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"movieWatchList\",\n    className: Styles.scrollable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 29\n    }\n  }, movieWatchList), movieWatchList.length * 480 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: function onClick() {\n      return scrollLeft('movieWatchList');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/left.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: function onClick() {\n      return scrollRight('movieWatchList');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/right.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 21\n    }\n  })), newlyAddedEpisodes.length > 0 && __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/server/\" + server.server_id + \"/shows\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 79\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 107\n    }\n  }, \"Nyligen tillagda avsnitt\"))), __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"newlyAddedEpisodes\",\n    className: Styles.scrollable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 29\n    }\n  }, newlyAddedEpisodes), newlyAddedEpisodes.length * 480 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: function onClick() {\n      return scrollLeft('newlyAddedEpisodes');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/left.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: function onClick() {\n      return scrollRight('newlyAddedEpisodes');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/right.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 21\n    }\n  })), newlyAddedShows.length > 0 && __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/server/\" + server.server_id + \"/shows\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 79\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 107\n    }\n  }, \"Nyligen tillagda serier\"))), __jsx(\"div\", {\n    className: Styles.movieRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    id: \"newlyAddedShows\",\n    className: Styles.scrollable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 29\n    }\n  }, newlyAddedShows), newlyAddedShows.length * 480 > windowSize.width && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: Styles.scrollButton,\n    onClick: function onClick() {\n      return scrollLeft('newlyAddedShows');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/left.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 41\n    }\n  })), __jsx(\"div\", {\n    className: Styles.scrollButton,\n    style: {\n      right: '0'\n    },\n    onClick: function onClick() {\n      return scrollRight('newlyAddedShows');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.NEXT_PUBLIC_SERVER_URL, \"/images/right.svg\"),\n    width: \"70\",\n    height: \"70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 41\n    }\n  })))), __jsx(\"hr\", {\n    className: Styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 21\n    }\n  }))))));\n};\n\n_s(main, \"ZBeGzqzgI2GIF3f/+cEEYeOWOJc=\", false, function () {\n  return [useTransition, useWindowSize];\n});\n\nexport var __N_SSP = true;\nexport default main; // Get the information about the server and send it to the front end before render (this is server-side)","map":{"version":3,"sources":["/mnt/h/Code/Dose/Main Server/pages/server/[server]/index.js"],"names":["Layout","Head","fetch","cookie","Router","useEffect","useState","Carousel","Container","Row","Col","Link","validateServerAccess","useWindowSize","Styles","MovieBackdrop","EpisodePoster","socketIOClient","useTransition","animated","setItems","fetcher","url","then","r","json","result","main","props","server","latestMovies","setLatesMovies","ongoingMovies","setOngoingMovies","movieWatchList","setMovieWatchList","ongoingShows","setOngoingShows","newlyAddedMovies","setNewlyAddedMovies","newlyAddedShows","setNewlyAddedShows","newlyAddedEpisodes","setNewlyAddedEpisodes","recommendedMovie","setRecommendedMovie","popularMovies","setPopularMovies","loading","loaded","setLoaded","transitions","from","opacity","enter","leave","delay","onRest","windowSize","allContent","getMovieList","genre","orderby","limit","ongoing","watchlist","popular","Promise","resolve","reject","server_ip","get","method","headers","body","JSON","stringify","response","forEach","movie","images","image","active","type","path","backdrop","poster","getNewEpisodeList","episode","console","log","getShowList","upcoming","getActiveImage","serverToken","socket","on","movieElements","img","push","id","watchtime","runtime","title","overview","selectMovie","status","activeLogo","movies","reverse","objectFit","height","minHeight","cursor","textShadow","shows","showElements","show","selectShow","time_watched","season_name","episode_number","total_time","selectEpisode","show_id","season_number","internalepisodeid","episodes","episodeElements","serie_id","season","internalEpisodeID","server_id","showID","seasonNumber","episodeNumber","scrollLeft","document","getElementById","window","innerWidth","scrollTo","scrollX","scrollY","scrollRight","loadingioSpinnerEclipse","ldio","recommended","recommendedInformation","logo","controls","process","env","NEXT_PUBLIC_SERVER_URL","color","contentRows","length","textTransform","movieRow","scrollable","width","scrollButton","right","divider"],"mappings":"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","sourcesContent":["import Layout from '../../../components/layout'\r\nimport Head from 'next/head'\r\nimport fetch from 'node-fetch'\r\nimport cookie from 'js-cookie';\r\nimport Router from 'next/router';\r\nimport { useEffect, useState } from 'react';\r\nimport { Carousel, Container, Row, Col } from 'react-bootstrap';\r\nimport Link from 'next/link';\r\nimport validateServerAccess from '../../../lib/validateServerAccess';\r\nimport useWindowSize from '../../../components/hooks/WindowSize';\r\nimport Styles from '../../../styles/server.module.css';\r\nimport MovieBackdrop from '../../../components/movieBackdrop';\r\nimport EpisodePoster from '../../../components/episodePoster';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { useTransition, animated, setItems } from 'react-spring';\r\n\r\nconst fetcher = url =>\r\n  fetch(url)\r\n    .then(r => {\r\n      return r.json().then(result => {\r\n          return result;\r\n      });\r\n    }\r\n  );\r\n\r\nconst main = (props) => {\r\n    // props.server is from the SSR under this function\r\n    let server = props.server;\r\n    \r\n    const [latestMovies, setLatesMovies] = useState(null);\r\n    const [ongoingMovies, setOngoingMovies] = useState([]);\r\n    const [movieWatchList, setMovieWatchList] = useState([]);\r\n    const [ongoingShows, setOngoingShows] = useState([]);\r\n    const [newlyAddedMovies, setNewlyAddedMovies] = useState([]);\r\n    const [newlyAddedShows, setNewlyAddedShows] = useState([]);\r\n    const [newlyAddedEpisodes, setNewlyAddedEpisodes] = useState([]);\r\n    const [recommendedMovie, setRecommendedMovie] = useState(false);\r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    let loading = 0;\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    const transitions = useTransition(newlyAddedMovies, {\r\n        from: { opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n        delay: 200,\r\n        onRest: () => setItems([]),\r\n      })\r\n    \r\n    \r\n\r\n\r\n\r\n    const windowSize = useWindowSize();\r\n    let allContent = [];\r\n\r\n    /**\r\n     * Makes a query to the current active server for a list of movies\r\n     * \r\n     * @param {string} genre \r\n     * @param {string} orderby \r\n     * @param {int} limit \r\n     */\r\n    const getMovieList = async (genre=null, orderby=null, limit=20, ongoing=false, watchlist=false, popular=false) => {\r\n        return new Promise((resolve, reject) => {\r\n            let url;\r\n            if (ongoing) {\r\n                url = `${server.server_ip}/api/movies/list/ongoing?${orderby !== null ? 'orderby='+orderby+'&' : ''}limit=${limit}&token=${cookie.get('serverToken')}`\r\n            } else if(watchlist) {\r\n                url = `${server.server_ip}/api/movies/list/watchlist?${orderby !== null ? 'orderby='+orderby+'&' : ''}limit=${limit}&token=${cookie.get('serverToken')}`\r\n            } else if(popular) {\r\n                url = `${server.server_ip}/api/movies/list/popular?${orderby !== null ? 'orderby='+orderby+'&' : ''}limit=${limit}&token=${cookie.get('serverToken')}`\r\n            } else {\r\n                url = `${server.server_ip}/api/movies/list${genre !== null ? '/genre/'+genre : ''}?${orderby !== null ? 'orderby='+orderby+'&' : ''}limit=${limit}&token=${cookie.get('serverToken')}`\r\n            }\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    limit: 20\r\n                })\r\n            })\r\n            .then((r) => r.json())\r\n            .then((response) => {\r\n                // Mark the movies active image\r\n                response.result.forEach(movie => {\r\n                    for (let image of movie.images) {\r\n                        if (image.active) {\r\n                            if (image.type === 'BACKDROP') {\r\n                                if (image.path === 'no_image') {\r\n                                    movie.backdrop = null;\r\n                                } else {\r\n                                    movie.backdrop = image.path;\r\n                                }\r\n                            } else {\r\n                                if (image.path === 'no_image') {\r\n                                    movie.backdrop = null;\r\n                                } else {\r\n                                    movie.poster = image.path;\r\n                                }\r\n                            }\r\n\r\n                            if (movie.backdrop != null && movie.poster != null) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                resolve(response.result);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Makes a query to the current active server for a list of new episodes\r\n     * \r\n     * @param {string} genre \r\n     * @param {string} orderby \r\n     * @param {int} limit \r\n     */\r\n         const getNewEpisodeList = async (orderby=null, limit=20) => {\r\n            return new Promise((resolve, reject) => {\r\n                let url;\r\n                url = `${server.server_ip}/api/series/list/episodes?${orderby !== null ? 'orderby='+orderby+'&' : ''}limit=${limit}&token=${cookie.get('serverToken')}`\r\n                fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        limit: 20\r\n                    })\r\n                })\r\n                .then((r) => r.json())\r\n                .then((response) => {\r\n                    // Mark the movies active image\r\n                    response.result.forEach(episode => {\r\n                        for (let image of episode.images) {\r\n                            if (image.active) {\r\n                                if (image.type === 'BACKDROP') {\r\n                                    if (image.path === 'no_image') {\r\n                                        episode.backdrop = null;\r\n                                    } else {\r\n                                        episode.backdrop = image.path;\r\n                                    }\r\n                                } else if (image.type === 'POSTER') {\r\n                                    if (image.path === 'no_image') {\r\n                                        episode.poster = null;\r\n                                    } else {\r\n                                        episode.poster = image.path;\r\n                                    }\r\n                                } else {\r\n                                    if (image.path === 'no_image') {\r\n                                        episode.backdrop = null;\r\n                                    } else {\r\n                                        episode.poster = image.path;\r\n                                    }\r\n                                }\r\n    \r\n                                if (episode.backdrop != null && episode.poster != null) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    console.log(response.result);\r\n                    resolve(response.result);\r\n                });\r\n            });\r\n        }\r\n\r\n    const getShowList = async (genre=null, orderby=null, limit=20, ongoing=false) => {\r\n        return new Promise((resolve, reject) => {\r\n            let url;\r\n            if (ongoing) {\r\n                url = `${server.server_ip}/api/series/list/ongoing?${orderby !== null ? 'orderby='+orderby+'&' : ''}limit=${limit}&token=${cookie.get('serverToken')}`\r\n            } else {\r\n                url = `${server.server_ip}/api/series/list${genre !== null ? '/genre/'+genre : ''}?${orderby !== null ? 'orderby='+orderby+'&' : ''}limit=${limit}&token=${cookie.get('serverToken')}`\r\n            }\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    limit: 20\r\n                })\r\n            })\r\n            .then((r) => r.json())\r\n            .then((response) => {\r\n                // Mark the movies active image\r\n                if (ongoing) {\r\n                    response.upcoming.forEach(movie => {\r\n                        for (let image of movie.images) {\r\n                            if (image.active) {\r\n                                if (image.type === 'BACKDROP') {\r\n                                    if (image.path === 'no_image') {\r\n                                        movie.backdrop = null;\r\n                                    } else {\r\n                                        movie.backdrop = image.path;\r\n                                    }\r\n                                } else {\r\n                                    if (image.path === 'no_image') {\r\n                                        movie.backdrop = null;\r\n                                    } else {\r\n                                        movie.poster = image.path;\r\n                                    }\r\n                                }\r\n    \r\n                                if (movie.backdrop != null && movie.poster != null) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    response.ongoing.forEach(movie => {\r\n                        for (let image of movie.images) {\r\n                            if (image.active) {\r\n                                if (image.type === 'BACKDROP') {\r\n                                    if (image.path === 'no_image') {\r\n                                        movie.backdrop = null;\r\n                                    } else {\r\n                                        movie.backdrop = image.path;\r\n                                    }\r\n                                } else {\r\n                                    if (image.path === 'no_image') {\r\n                                        movie.backdrop = null;\r\n                                    } else {\r\n                                        movie.poster = image.path;\r\n                                    }\r\n                                }\r\n    \r\n                                if (movie.backdrop != null && movie.poster != null) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    resolve(response);\r\n                    return;\r\n                }\r\n\r\n\r\n                response.result.forEach(movie => {\r\n                    for (let image of movie.images) {\r\n                        if (image.active) {\r\n                            if (image.type === 'BACKDROP') {\r\n                                if (image.path === 'no_image') {\r\n                                    movie.backdrop = null;\r\n                                } else {\r\n                                    movie.backdrop = image.path;\r\n                                }\r\n                            } else {\r\n                                if (image.path === 'no_image') {\r\n                                    movie.backdrop = null;\r\n                                } else {\r\n                                    movie.poster = image.path;\r\n                                }\r\n                            }\r\n\r\n                            if (movie.backdrop != null && movie.poster != null) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                resolve(response.result);\r\n            });\r\n        });\r\n    }\r\n\r\n    const getActiveImage = (images, type) => {\r\n        for (let image of images) {\r\n            if (image.type === type && image.active && image.path != \"no_image\") {\r\n                return image;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        validateServerAccess(server, (serverToken) => {\r\n            const socket = socketIOClient(server.server_ip);\r\n            socket.on(\"MOVIE\", movie => {\r\n                console.log(movie);\r\n                let movieElements = newlyAddedMovies;\r\n                let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                movieElements.push(\r\n                    <MovieBackdrop markAsDoneButton id={movie.id} time={movie.watchtime} runtime={movie.runtime} title={movie.title} overview={movie.overview} runtime={movie.runtime} backdrop={img} onClick={(id) => selectMovie(movie.id)}></MovieBackdrop>\r\n                );\r\n                setNewlyAddedMovies(movieElements);\r\n            });      \r\n            \r\n            \r\n            // Get recommended video (random video right now)\r\n            fetch(`${server.server_ip}/api/movies/list/random?trailer=true&token=${cookie.get('serverToken')}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n            .then((r) => r.json())\r\n            .then(result => {\r\n                if (result.status === 'success') {\r\n                    result.movie.activeLogo = getActiveImage(result.movie.images, 'LOGO');\r\n                    console.log(result);\r\n\r\n                    setRecommendedMovie(result.movie);\r\n                } else {\r\n                    console.log(\"Error getting recommended movie\");\r\n                }\r\n            })\r\n            \r\n\r\n            // Get all the newest released movies (The slieshow)\r\n            getMovieList(null, 'release_date', 5).then(movies => {\r\n                movies.reverse();\r\n                let movieElements = [];\r\n                for (let movie of movies) {\r\n                    let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/original/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    movieElements.push(\r\n                        <Carousel.Item>\r\n                            <img \r\n                                className=\"d-block w-100\"\r\n                                src={img}\r\n                                alt={movie.title}\r\n                                style={{objectFit: 'cover', height: '90vh', minHeight: '500px', cursor: 'pointer'}}\r\n                                onClick={() => {selectMovie(movie.id)}}\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3 style={{textShadow: '0px 0px 6px #000'}}>{movie.title}</h3>\r\n                                <p style={{textShadow: '0px 0px 6px #000'}}>{movie.overview}</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    );\r\n                }\r\n                loading++\r\n                setLatesMovies(movieElements);\r\n\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n\r\n            // Get popular movies\r\n            getMovieList(null, 'release_date', 20, false, false, true).then(movies => {\r\n                movies.reverse();\r\n                let movieElements = [];\r\n                for (let movie of movies) {\r\n                    let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    movieElements.push(\r\n                        <MovieBackdrop markAsDoneButton id={movie.id} time={movie.watchtime} runtime={movie.runtime} title={movie.title} overview={movie.overview} runtime={movie.runtime} backdrop={img} onClick={(id) => selectMovie(movie.id)}></MovieBackdrop>\r\n                    );\r\n                }\r\n                loading++\r\n                setPopularMovies(movieElements);\r\n\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n\r\n            // Get ongoing movies\r\n            getMovieList(null, 'release_date', 20, true).then(movies => {\r\n                movies.reverse();\r\n                let movieElements = [];\r\n                for (let movie of movies) {\r\n                    let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    movieElements.push(\r\n                        <MovieBackdrop markAsDoneButton id={movie.id} time={movie.watchtime} runtime={movie.runtime} title={movie.title} overview={movie.overview} runtime={movie.runtime} backdrop={img} onClick={(id) => selectMovie(movie.id)}></MovieBackdrop>\r\n                    );\r\n                }\r\n                loading++\r\n                setOngoingMovies(movieElements);\r\n\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n\r\n            // Get watchlist for movies\r\n            getMovieList(null, 'release_date', 20, false, true).then(movies => {\r\n                movies.reverse();\r\n                let movieElements = [];\r\n                for (let movie of movies) {\r\n                    let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    movieElements.push(\r\n                        <MovieBackdrop markAsDoneButton id={movie.id} time={movie.watchtime} runtime={movie.runtime} title={movie.title} overview={movie.overview} runtime={movie.runtime} backdrop={img} onClick={(id) => selectMovie(movie.id)}></MovieBackdrop>\r\n                    );\r\n                }\r\n                loading++\r\n                setMovieWatchList(movieElements);\r\n\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n\r\n            // Get newly added movies\r\n            getMovieList(null, 'added_date', 20).then(movies => {\r\n                let movieElements = [];\r\n                for (let movie of movies) {\r\n                    let img = movie.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${movie.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    movieElements.push(\r\n                        <MovieBackdrop markAsDoneButton id={movie.id} time={movie.watchtime} runtime={movie.runtime} title={movie.title} overview={movie.overview} runtime={movie.runtime} backdrop={img} onClick={(id) => selectMovie(movie.id)}></MovieBackdrop>\r\n                    );\r\n                }\r\n                loading++\r\n                setNewlyAddedMovies(movieElements);\r\n\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n\r\n            // Get newly added shows\r\n            getShowList(null, 'added_date', 20).then(shows => {\r\n                let showElements = [];\r\n                for (let show of shows) {\r\n                    let img = show.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${show.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    showElements.push(\r\n                        <MovieBackdrop markAsDoneButton id={show.id} time={show.watchtime} runtime={show.runtime} title={show.title} overview={show.overview} runtime={show.runtime} backdrop={img} onClick={(id) => selectShow(show.id)}></MovieBackdrop>\r\n                    );\r\n                }\r\n                loading++\r\n                setNewlyAddedShows(showElements);\r\n\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n            // Get ongoing shows\r\n            getShowList(null, 'added_date', 20, true).then(result => {\r\n                let showElements = [];\r\n                for (let show of result.upcoming) {\r\n                    let img = show.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${show.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    showElements.push(\r\n                        <MovieBackdrop showTitle markAsDoneButton id={show.id} time={show.time_watched} runtime={show.runtime} title={show.season_name + \" - Episode \" + show.episode_number}\r\n                                       overview={show.overview} runtime={show.total_time} backdrop={img} onClick={(id) => selectEpisode(show.show_id, show.season_number, show.episode_number, show.internalepisodeid)}></MovieBackdrop>\r\n                    );\r\n                }\r\n                for (let show of result.ongoing) {\r\n                    let img = show.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${show.backdrop}` : 'https://via.placeholder.com/2000x1000' \r\n                    showElements.push(\r\n                        <MovieBackdrop showTitle markAsDoneButton id={show.id} time={show.time_watched} runtime={show.runtime} title={show.season_name + \" - Episode \" + show.episode_number}\r\n                                       overview={show.overview} runtime={show.total_time} backdrop={img} onClick={(id) => selectEpisode(show.show_id, show.season_number, show.episode_number, show.internalepisodeid)}></MovieBackdrop>\r\n                    );\r\n                }\r\n                loading++\r\n                setOngoingShows(showElements);\r\n\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n\r\n            getNewEpisodeList('added_date', 20).then(episodes => {\r\n                let episodeElements = [];\r\n\r\n                for (let episode of episodes) {\r\n                    let poster = episode.poster !== null ? `https://image.tmdb.org/t/p/w500/${episode.poster}` : 'https://via.placeholder.com/500x1000';\r\n                    let backdrop = episode.backdrop !== null ? `https://image.tmdb.org/t/p/w500/${episode.backdrop}` : 'https://via.placeholder.com/500x1000' \r\n                    episodeElements.push(\r\n                        <EpisodePoster show={episode.serie_id} season={episode.season} episode={episode.episode} poster={poster} internalEpisodeID={episode.internalepisodeid} backdrop={backdrop}\r\n                            onClick={(season, episode, show, internalEpisodeID) => selectEpisode(show, season, episode, internalEpisodeID)}></EpisodePoster>\r\n                    );\r\n                }\r\n                loading++\r\n                setNewlyAddedEpisodes(episodeElements);\r\n            }).then(() => {\r\n                if(loading == 7) {\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n        });\r\n    }, [loading, newlyAddedMovies]);\r\n\r\n\r\n    const selectMovie = (id) => {\r\n        Router.push(`/server/${server.server_id}/movies/video/${id}`);\r\n    }\r\n\r\n    const selectShow = (id) => {\r\n        Router.push(`/server/${server.server_id}/shows/video/${id}`);\r\n    }\r\n\r\n    const selectEpisode = (showID, seasonNumber, episodeNumber, internalEpisodeID) => {\r\n        Router.push(`/server/${server.server_id}/shows/video/${showID}/season/${seasonNumber}/episode/${episodeNumber}?internalID=${internalEpisodeID}`)\r\n    }\r\n\r\n\r\n    const scrollLeft = (id) => {\r\n        document.getElementById(id).scrollLeft -= (window.innerWidth)*0.8;\r\n        window.scrollTo(window.scrollX, window.scrollY - 1);\r\n        window.scrollTo(window.scrollX, window.scrollY + 1);\r\n    }\r\n    const scrollRight = (id) => {\r\n        document.getElementById(id).scrollLeft += (window.innerWidth)*0.8;\r\n        window.scrollTo(window.scrollX, window.scrollY - 1);\r\n        window.scrollTo(window.scrollX, window.scrollY + 1);\r\n    }\r\n\r\n    // LAYOUT //\r\n    return (<>\r\n        {!loaded &&\r\n            <div className={Styles.loadingioSpinnerEclipse}>\r\n            <div className={Styles.ldio}>\r\n                <div></div>\r\n            </div>\r\n            </div>\r\n        }\r\n        {loaded &&\r\n\r\n        <Layout searchEnabled server={server} serverToken={cookie.get('serverToken')}>\r\n        <Head>\r\n        </Head>\r\n\r\n        {recommendedMovie != false &&\r\n            <div className={Styles.recommended}>\r\n                <video  autoPlay={true} loop={true} preload=\"auto\" muted>\r\n                    <source src={`${server.server_ip}/api/trailer/${recommendedMovie[\"id\"]}?type=MOVIE&token=${cookie.get('serverToken')}`}type=\"video/mp4\" />\r\n                </video>\r\n                <div className={Styles.recommendedInformation}>\r\n                    {recommendedMovie[\"activeLogo\"] != false &&\r\n                    <img src={`https://image.tmdb.org/t/p/original/${recommendedMovie[\"activeLogo\"].path}`} className={Styles.logo} />\r\n                    }\r\n                    {recommendedMovie[\"activeLogo\"] == false &&\r\n                    <h1>{recommendedMovie[\"title\"]}</h1>\r\n                    }\r\n                    <p>{recommendedMovie[\"overview\"]}</p>\r\n                    <div className={Styles.controls}>\r\n                        <Link href={`/server/${server.server_id}/movies/video/${recommendedMovie[\"id\"]}?autoPlay=true`}>\r\n                            <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/001-play-button.png`} />\r\n                        </Link>\r\n                        <Link href={`/server/${server.server_id}/movies/video/${recommendedMovie[\"id\"]}`}>\r\n                            <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/002-information.png`} />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n    \r\n    \r\n            </div>\r\n        }\r\n\r\n            \r\n        <br></br>\r\n        <div style={{color: 'white'}}>\r\n            <Container fluid className={Styles.contentRows}>\r\n            {popularMovies.length > 0 &&\r\n                    <>\r\n                        <h2 style={{textTransform: 'capitalize'}}>Populärt just nu</h2>  \r\n                        <div className={Styles.movieRow}>\r\n                            <div id=\"popularMovies\" className={Styles.scrollable}>\r\n                                {popularMovies}\r\n                            </div>\r\n                            {popularMovies.length * 480 > windowSize.width &&\r\n                                <>\r\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('popularMovies')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" />\r\n                                    </div>\r\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('popularMovies')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div> \r\n                    <hr className={Styles.divider}></hr>\r\n                    </> \r\n                }\r\n\r\n                {ongoingMovies.length > 0 &&\r\n                    <>\r\n                        <h2 style={{textTransform: 'capitalize'}}>Pågående filmer</h2>  \r\n                        <div className={Styles.movieRow}>\r\n                            <div id=\"ongoingMovies\" className={Styles.scrollable}>\r\n                                {ongoingMovies}\r\n                            </div>\r\n                            {ongoingMovies.length * 480 > windowSize.width &&\r\n                                <>\r\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('ongoingMovies')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" />\r\n                                    </div>\r\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('ongoingMovies')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div> \r\n                    <hr className={Styles.divider}></hr>\r\n                    </> \r\n                }\r\n\r\n                {ongoingShows.length > 0 &&\r\n                    <>\r\n                        <h2 style={{textTransform: 'capitalize'}}>Pågående serier</h2>    \r\n                        <div className={Styles.movieRow}>\r\n                            <div id=\"ongoingShows\" className={Styles.scrollable}>\r\n                                {ongoingShows}\r\n                            </div>\r\n                            {ongoingShows.length * 480 > windowSize.width &&\r\n                                <>\r\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('ongoingShows')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('ongoingShows')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div> \r\n                    <hr className={Styles.divider}></hr>\r\n                    </> \r\n                }\r\n\r\n                {newlyAddedMovies.length > 0 &&\r\n                    <>\r\n                        <Link href={\"/server/\" + server.server_id + \"/movies\"}><a style={{color: 'white'}}><h2 style={{textTransform: 'capitalize'}}>Nyligen tillagda filmer</h2></a></Link>   \r\n                        <div className={Styles.movieRow}>\r\n                            <div id=\"newlyAddedMovies\" className={Styles.scrollable}>\r\n                                {newlyAddedMovies}\r\n                            </div>\r\n                            {newlyAddedMovies.length * 480 > windowSize.width &&\r\n                                <>\r\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('newlyAddedMovies')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('newlyAddedMovies')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div> \r\n                    <hr className={Styles.divider}></hr>\r\n                    </> \r\n                }\r\n\r\n                {movieWatchList.length > 0 &&\r\n                    <>\r\n                        <Link href={\"/server/\" + server.server_id + \"/movies\"}><a style={{color: 'white'}}><h2 style={{textTransform: 'capitalize'}}>Filmer att se senare</h2></a></Link>   \r\n                        <div className={Styles.movieRow}>\r\n                            <div id=\"movieWatchList\" className={Styles.scrollable}>\r\n                                {movieWatchList}\r\n                            </div>\r\n                            {movieWatchList.length * 480 > windowSize.width &&\r\n                                <>\r\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('movieWatchList')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('movieWatchList')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div> \r\n                    <hr className={Styles.divider}></hr>\r\n                    </> \r\n                }\r\n                \r\n                {newlyAddedEpisodes.length > 0 &&\r\n                    <>\r\n                        <Link href={\"/server/\" + server.server_id + \"/shows\"}><a style={{color: 'white'}}><h2 style={{textTransform: 'capitalize'}}>Nyligen tillagda avsnitt</h2></a></Link>\r\n                        <div className={Styles.movieRow}>\r\n                            <div id=\"newlyAddedEpisodes\" className={Styles.scrollable}>\r\n                                {newlyAddedEpisodes}\r\n                            </div>\r\n                            {newlyAddedEpisodes.length * 480 > windowSize.width &&\r\n                                <>\r\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('newlyAddedEpisodes')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('newlyAddedEpisodes')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div> \r\n                    <hr className={Styles.divider}></hr>\r\n                    </> \r\n                }\r\n                \r\n                {newlyAddedShows.length > 0 &&\r\n                    <>\r\n                        <Link href={\"/server/\" + server.server_id + \"/shows\"}><a style={{color: 'white'}}><h2 style={{textTransform: 'capitalize'}}>Nyligen tillagda serier</h2></a></Link>\r\n                        <div className={Styles.movieRow}>\r\n                            <div id=\"newlyAddedShows\" className={Styles.scrollable}>\r\n                                {newlyAddedShows}\r\n                            </div>\r\n                            {newlyAddedShows.length * 480 > windowSize.width &&\r\n                                <>\r\n                                    <div className={Styles.scrollButton} onClick={() => scrollLeft('newlyAddedShows')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/left.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                    <div className={Styles.scrollButton} style={{right: '0'}} onClick={() => scrollRight('newlyAddedShows')}>\r\n                                        <img src={`${process.env.NEXT_PUBLIC_SERVER_URL}/images/right.svg`} width=\"70\" height=\"70\" />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div> \r\n                    <hr className={Styles.divider}></hr>\r\n                    </> \r\n                }\r\n            </Container>\r\n        </div>\r\n        </Layout>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default main;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Get the information about the server and send it to the front end before render (this is server-side)\r\nexport async function getServerSideProps(context) {\r\n    let serverId = context.params.server;\r\n    return await fetch(`http://localhost:${process.env.SERVER_PORT}${process.env.SERVER_SUB_FOLDER}/api/servers/getServer`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id: serverId\r\n        }),\r\n    })\r\n    .then((r) => r.json())\r\n    .then((data) => {\r\n        return {\r\n            props: {\r\n                server: data.server\r\n            }\r\n          }\r\n    });\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}