"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _index = require("../../index");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var MySectionBlock =
/*#__PURE__*/
function (_PureComponent) {
  _inheritsLoose(MySectionBlock, _PureComponent);

  function MySectionBlock() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = MySectionBlock.prototype;

  _proto.getStyle = function getStyle() {
    var _this$props = this.props,
        inViewport = _this$props.inViewport,
        enterCount = _this$props.enterCount;
    var basicStyle = {
      width: '400px',
      height: '300px',
      backgroundColor: '#217ac0',
      color: '#fff'
    }; // Fade in only the first time we enter the viewport

    if (inViewport && enterCount === 1) {
      return _objectSpread({}, basicStyle, {
        WebkitTransition: 'opacity 1s ease-in-out'
      });
    }

    if (!inViewport && enterCount < 1) {
      return _objectSpread({}, basicStyle, {
        WebkitTransition: 'none',
        opacity: '0'
      });
    }

    return basicStyle;
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        enterCount = _this$props2.enterCount,
        leaveCount = _this$props2.leaveCount;
    return _react["default"].createElement("section", null, _react["default"].createElement("div", {
      className: "card",
      style: this.getStyle()
    }, _react["default"].createElement("div", {
      className: "card__conent"
    }, _react["default"].createElement("h3", null, "Hello"), _react["default"].createElement("p", null, "Enter viewport: " + enterCount + " times"), _react["default"].createElement("p", null, "Leave viewport: " + leaveCount + " times"))));
  };

  return MySectionBlock;
}(_react.PureComponent);

var SectionWithTransition = (0, _index.handleViewport)(MySectionBlock, {
  rootMargin: '-1.0px'
});
var _default = SectionWithTransition;
exports["default"] = _default;